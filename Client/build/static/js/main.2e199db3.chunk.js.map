{"version":3,"sources":["redux/constants/Constants.ts","redux/actions/LoginAction.ts","components/Login/Login.tsx","components/Nav/Nav.tsx","redux/actions/AddItemAction.ts","redux/actions/UpdateItemAction.ts","redux/actions/DeleteItemAction.ts","components/Items/Items.tsx","redux/actions/RetrieveItemsAction.ts","components/Home/Home.tsx","redux/actions/AddCafetarianAction.ts","redux/actions/UpdateCafetarianAction.ts","redux/actions/DeleteCafetarianAction.ts","redux/actions/RetrieveCafetarianAction.ts","components/AdminHome/AdminHome.tsx","App.tsx","redux/reducers/LoginReducer.ts","redux/reducers/ItemReducer.ts","redux/reducers/CafetarianReducer.ts","redux/store.ts","reportWebVitals.ts","index.tsx"],"names":["Update_Login","Retrieve_Items","Add_Item","Update_Item","Delete_Item","Retrieve_Cafetarian","Add_Cafetarian","Update_Cafetarian","Delete_Cafetarian","LoginAction","params","type","payload","Login","useState","email","setEmail","password","setPassword","dispatch","useDispatch","e","a","preventDefault","isChecked","document","querySelector","admin","checked","loginCredentials","JSON","stringify","axios","get","isSuccess","data","success","alert","className","placeholder","onChange","target","value","onClick","handleLogin","Nav","useSelector","state","LoginReducer","to","AddItemAction","UpdateItemAction","DeleteItemAction","Items","iname","setIname","price","setPrice","available_qty","setAvailableQty","item_id","setItemId","btn","setBtn","ItemReducer","ChangeItemDiv","style","display","clean","item","post","console","log","put","res","delete","id","map","HandleUpdateItem","DeleteItem","parseInt","RetrieveItemsAction","Home","items","useEffect","RetrieveItems","AddCafetarianAction","UpdateCafetarianAction","DeleteCafetarianAction","RetrieveCafetarianAction","Cafetarian","fname","setFname","lname","setLname","salary","setSalary","dob","setDob","Cafetarians","CafetarianReducer","cafetarians","hire_date","Date","registered_by","cafetarian","caf","DeleteCafetarian","App","exact","path","AdminHome","initialState","rootReducer","combineReducers","action","filter","store","createStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2e199db3.chunk.js","sourcesContent":["export const Update_Login = 'Update_Login';\r\nexport const Retrieve_Items = 'Retrieve_Items';\r\nexport const Add_Item = 'Add_Item';\r\nexport const Update_Item = 'Update_Item';\r\nexport const Delete_Item = 'Delete_Item';\r\nexport const Retrieve_Cafetarian = 'Retrieve_Cafetarian';\r\nexport const Add_Cafetarian = 'Add_Cafetarian';\r\nexport const Update_Cafetarian = 'Update_Cafetarian';\r\nexport const Delete_Cafetarian = 'Delete_Cafetarian';","import {Update_Login} from '../constants/Constants'\r\nimport { Ilogin } from '../Interface/Login'\r\n\r\nexport const LoginAction = (params:Ilogin) =>{\r\n    return{\r\n        type:Update_Login,\r\n        payload:params\r\n    }\r\n}","import './login.css'\r\nimport {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {useDispatch} from 'react-redux'\r\nimport {LoginAction} from '../../redux/actions/LoginAction'\r\n\r\nfunction Login() {\r\n    \r\n    const [email,setEmail] = useState<string>('')\r\n    const [password,setPassword] = useState<string>('')\r\n    const dispatch = useDispatch()\r\n\r\n    async function handleLogin(e:any){\r\n        \r\n        e.preventDefault()\r\n        const isChecked:any=document.querySelector('.chkbx')\r\n        const admin = isChecked.checked\r\n        const loginCredentials = JSON.stringify({email,password,admin})\r\n\r\n        const isSuccess:any = await axios.get('/api/login',{\r\n            params:loginCredentials\r\n        })\r\n        \r\n        if(isSuccess.data.success){\r\n            dispatch(LoginAction(isSuccess.data))\r\n        }\r\n        else{\r\n            alert('Invalid Credentials...')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <p className=\"sign\" >Sign in</p>\r\n            <form className=\"form1\">\r\n                <input className=\"un \" type=\"text\" placeholder=\"Email\" onChange={(e)=>{setEmail(e.target.value)}}/>\r\n                <input className=\"un\" type=\"password\" placeholder=\"Password\" onChange={(e)=>{setPassword(e.target.value)}}/>\r\n                <div className=\"login\">\r\n                <button className=\"submit\" onClick={(e)=>handleLogin(e)}>Sign in</button>\r\n                <div className=\"checkbox\">\r\n                    <input type=\"checkbox\" className=\"chkbx\"/>\r\n                    Login as admin\r\n                </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n    \r\n    export default Login\r\n    ","import './nav.css';\r\nimport {Link} from 'react-router-dom';\r\nimport { RootState } from '../../redux/store';\r\nimport {useSelector} from 'react-redux'\r\n\r\nfunction Nav() {\r\n    const loginCredentials = useSelector((state:RootState) => state.LoginReducer)\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"nav-logo\">FASTCafe</div>\r\n               \r\n               {loginCredentials.admin?\r\n                    \r\n                    <div className=\"nav-links\">\r\n                        <Link to=\"/\" className=\"link\"><p >Home</p></Link>\r\n                    </div>\r\n                    \r\n                    :\r\n                    \r\n                    <div className=\"nav-links\">\r\n                        <Link to=\"/\" className=\"link\"><p >Home</p></Link>\r\n                        <Link to=\"/items\" className=\"link\"><p >Items</p></Link>\r\n                        <Link to=\"/\" className=\"link\"><p >Orders</p></Link>\r\n                    </div>\r\n                }\r\n\r\n                {/* login logout */}       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import {Add_Item} from '../constants/Constants'\r\nimport { Iitem } from '../Interface/Item'\r\n\r\nexport const AddItemAction = (params:Iitem) =>{\r\n    return{\r\n        type:Add_Item,\r\n        payload:[params]\r\n    }\r\n}","import {Update_Item} from '../constants/Constants'\r\nimport { Iitem } from '../Interface/Item'\r\n\r\nexport const UpdateItemAction = (params:Iitem) =>{\r\n    return{\r\n        type:Update_Item,\r\n        payload:[params]\r\n    }\r\n}","import {Delete_Item} from '../constants/Constants'\r\n\r\nexport const DeleteItemAction = (params:number) =>{\r\n    return{\r\n        type:Delete_Item,\r\n        payload:params\r\n    }\r\n}","import {useState} from 'react'\r\nimport axios from 'axios'\r\nimport './items.css';\r\nimport {useDispatch} from 'react-redux'\r\n\r\nimport {AddItemAction} from '../../redux/actions/AddItemAction'\r\nimport {useSelector} from 'react-redux'\r\nimport { RootState } from '../../redux/store';\r\nimport { Iitem } from '../../redux/Interface/Item';\r\nimport { UpdateItemAction } from '../../redux/actions/UpdateItemAction';\r\nimport {DeleteItemAction} from '../../redux/actions/DeleteItemAction'\r\n\r\nfunction Items() {\r\n    \r\n    const [iname, setIname] = useState<string>('')\r\n    const [price,setPrice] = useState<number>(0)\r\n    const [available_qty,setAvailableQty] = useState<number>(0)\r\n    const [item_id,setItemId] = useState<number>()\r\n    const [btn,setBtn] = useState<string>(\"Add Item\") \r\n\r\n    //category [to be implemented]\r\n    const dispatch = useDispatch()\r\n    const Items = useSelector((state:RootState) => state.ItemReducer)\r\n    \r\n  \r\n    \r\n    const ChangeItemDiv = (state:string) =>{\r\n        let itmDiv:any = document.querySelector('.addItems')\r\n        itmDiv.style.display = state\r\n    }\r\n    \r\n    function clean(){\r\n            setIname(\"\")\r\n            setPrice(0)\r\n            setAvailableQty(0)\r\n    }\r\n\r\n    \r\n\r\n    async function AddItem(){\r\n         \r\n        setBtn(\"Add Item\")\r\n        const item = JSON.stringify({iname,price,available_qty})\r\n\r\n        const isSuccess:any = await axios.post('/api/Item/addItem',{item})\r\n        \r\n        // data[0] has item data , data[1] has success status i.e true,false\r\n        \r\n        if(isSuccess.data[1].success){\r\n            console.log(isSuccess.data[0])\r\n            dispatch(AddItemAction(isSuccess.data[0]))\r\n            ChangeItemDiv('none')\r\n            alert('Item Added...')\r\n            clean()\r\n        }\r\n        else{\r\n            alert('Invalid item info....')\r\n        }\r\n    } \r\n\r\n    function HandleUpdateItem(item:Iitem){\r\n            \r\n            setBtn(\"Update Item\")\r\n            setIname(item.iname)\r\n            setPrice(item.price)\r\n            setItemId(item.item_id)\r\n            setAvailableQty(item.available_qty)\r\n            ChangeItemDiv('block')\r\n\r\n    }\r\n\r\n    async function UpdateItem(){\r\n        const item= JSON.stringify({iname,item_id,price,available_qty})\r\n        const res:any = await axios.put('/api/Item/updateItem',{item})\r\n        \r\n        if(res.data[1].success){\r\n            \r\n            dispatch(UpdateItemAction(res.data[0]))\r\n            clean()\r\n            ChangeItemDiv('none')\r\n            alert('Item Updated...')\r\n\r\n        }\r\n        else{\r\n            alert('Invalid Input...')\r\n        }\r\n    }\r\n\r\n    async function DeleteItem(item_id:number){\r\n        const item = JSON.stringify({item_id})\r\n        const res:any = await axios.delete('/api/Item/deleteItem',{params:{item}})\r\n        if(res.data[1].success){\r\n            \r\n            dispatch(DeleteItemAction(item_id))\r\n            alert('Item Deleted...')\r\n        }\r\n        else{\r\n            alert('Invalid Item...')\r\n        }\r\n\r\n    }\r\n\r\n    function HandleAddItem (){\r\n            setBtn(\"Add Item\")\r\n            setIname('')\r\n            setPrice(0)\r\n            setAvailableQty(0)\r\n            ChangeItemDiv(\"block\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"customer-main\">\r\n            \r\n            <div className=\"contents\">\r\n                <button className=\"btn btn-success btn-lg btn-txt\" onClick={()=>HandleAddItem()}>Add Item</button>\r\n            \r\n            <div className=\"head\">\r\n                Items   \r\n            </div>\r\n            <div className=\"scrollist\">\r\n                <table id=\"customers\">\r\n                    <tr>\r\n                        <th>Id</th>\r\n                        <th>Name</th>\r\n                        <th>Price</th>\r\n                        <th>Quantity</th>\r\n                        <th>Category</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                    {\r\n                        Items.map((item)=><tr>\r\n                            <td>{item.item_id}</td>\r\n                            <td>{item.iname}</td>\r\n                            <td>{item.price}</td>\r\n                            <td>{item.available_qty}</td>\r\n                                {/* category to be implemented */}\r\n                            <td>xyz</td> \r\n                            <td>\r\n                            <div className=\"btn-container\">\r\n                                <button className=\"btn btn-primary btn-lg btn-wid\" onClick={()=>HandleUpdateItem(item)}>Update</button>\r\n                                <button className=\"btn btn-danger btn-lg btn-wid\" onClick={()=>DeleteItem(item.item_id)}>Delete</button>\r\n                            </div>\r\n                        </td>\r\n                        </tr>)\r\n                    }\r\n                    \r\n                </table>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n            <div className=\"addItems\">\r\n                <div className=\"cross\" onClick={()=>ChangeItemDiv(\"none\")}>\r\n                    X\r\n                </div>            \r\n                <div className=\"itm-details\">\r\n                <div className=\"itm-lbl\">\r\n                    <label >Name: </label>\r\n                    <input className=\"itm-input\" value={iname} onChange={(e)=>{setIname(e.target.value)}}/>\r\n                </div>\r\n                <div className=\"itm-lbl\">\r\n                    <label >Price: </label>\r\n                    <input type=\"number\" className=\"itm-input\" value={price}  onChange={(e)=>{setPrice(parseInt(e.target.value))}}/>\r\n                </div>\r\n                <div className=\"itm-lbl\">\r\n                    <label >Quantity: </label>\r\n                    <input type=\"number\" className=\"itm-input\" value={available_qty} onChange={(e)=>{setAvailableQty(parseInt(e.target.value))}}/>\r\n                </div>\r\n                {/* tobe changed */}\r\n                <div className=\"itm-lbl\">\r\n                    <label >Category: </label>\r\n                    <input className=\"itm-input\"/>\r\n                </div>\r\n\r\n                <div className=\"btn-md\">\r\n                    {\r\n                        btn===\"Add Item\"?\r\n                        <button className=\"bn\" onClick={AddItem}>Add Item</button>\r\n                        :\r\n                        <button className=\"bn\" onClick={UpdateItem}>Update Item</button>\r\n                    }\r\n                </div>\r\n            \r\n            </div>\r\n\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Items\r\n","import {Retrieve_Items} from '../constants/Constants'\r\nimport { Iitem } from '../Interface/Item'\r\n\r\nexport const RetrieveItemsAction = (params:Array<Iitem>) =>{\r\n    return{\r\n        type:Retrieve_Items,\r\n        payload:params\r\n    }\r\n}","import {useEffect} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport axios from 'axios'\r\nimport { RootState } from '../../redux/store'\r\nimport {RetrieveItemsAction} from '../../redux/actions/RetrieveItemsAction'\r\nimport {useDispatch} from 'react-redux'\r\nimport './home.css';\r\n\r\nfunction Home() {\r\n\r\n    const dispatch = useDispatch()\r\n    const Items = useSelector((state:RootState) => state.ItemReducer)\r\n\r\n    useEffect(() => {\r\n        RetrieveItems()\r\n    }, [])\r\n\r\n    async function RetrieveItems(){\r\n        \r\n        const items:any = await axios.get('/api/Item/retrieveItem')\r\n        console.log(items.data)\r\n        dispatch(RetrieveItemsAction(items.data[0]))\r\n        console.log(Items)\r\n    }\r\n\r\n    return (\r\n        <div className=\"contents\">\r\n        <div className=\"customer-main\">\r\n                <table id=\"customers\">\r\n                    <tr>\r\n                        <th>Id</th>\r\n                        <th>Name</th>\r\n                        <th>Price</th>\r\n                        <th>Quantity</th>\r\n                        <th>Category</th>\r\n                    </tr>\r\n                    {\r\n                        Items.map((item)=><tr>\r\n                            <td>{item.item_id}</td>\r\n                            <td>{item.iname}</td>\r\n                            <td>{item.price}</td>\r\n                            <td>{item.available_qty}</td>\r\n                                {/* category to be implemented */}\r\n                            <td>xyz</td> \r\n                            \r\n                        </tr>)\r\n                    }\r\n                    \r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import {Add_Cafetarian} from '../constants/Constants'\r\nimport { Icafetarian } from '../Interface/Cafetarian'\r\n\r\nexport const AddCafetarianAction = (params:Icafetarian) =>{\r\n    return{\r\n        type:Add_Cafetarian,\r\n        payload:[params]\r\n    }\r\n}","import {Update_Cafetarian} from '../constants/Constants'\r\nimport { Icafetarian } from '../Interface/Cafetarian'\r\n\r\nexport const UpdateCafetarianAction = (params:Icafetarian) =>{\r\n    return{\r\n        type:Update_Cafetarian,\r\n        payload:[params]\r\n    }\r\n}","import {Delete_Cafetarian} from '../constants/Constants'\r\n\r\nexport const DeleteCafetarianAction = (params:string) =>{\r\n    return{\r\n        type:Delete_Cafetarian,\r\n        payload:params\r\n    }\r\n}","import {Retrieve_Cafetarian} from '../constants/Constants'\r\nimport { Icafetarian } from '../Interface/Cafetarian'\r\n\r\nexport const RetrieveCafetarianAction = (params:Array<Icafetarian>) =>{\r\n    return{\r\n        type:Retrieve_Cafetarian,\r\n        payload:params\r\n    }\r\n}","import './adminhome.css';\r\n\r\nimport {useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {useDispatch} from 'react-redux'\r\n\r\nimport {AddCafetarianAction} from '../../redux/actions/AddCafetarianAction'\r\nimport {useSelector} from 'react-redux'\r\nimport { RootState } from '../../redux/store';\r\nimport { Icafetarian } from '../../redux/Interface/Cafetarian';\r\nimport { UpdateCafetarianAction } from '../../redux/actions/UpdateCafetarianAction';\r\nimport {DeleteCafetarianAction} from '../../redux/actions/DeleteCafetarianAction'\r\nimport {RetrieveCafetarianAction} from '../../redux/actions/RetrieveCafetarianAction'\r\n\r\nfunction Cafetarian() {\r\n\r\n    const [fname, setFname] = useState<string>('')\r\n    const [lname, setLname] = useState<string>('')\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [salary, setSalary] = useState<number>(0)\r\n    const [dob,setDob] = useState<string>('')\r\n    const [btn,setBtn] = useState<string>(\"Add Cafetarian\") \r\n\r\n    const dispatch = useDispatch()\r\n    const Cafetarians = useSelector((state:RootState) => state.CafetarianReducer)\r\n    const admin = useSelector((state:RootState)=>state.LoginReducer)\r\n\r\n\r\n    useEffect(() => {\r\n        RetrieveItems()\r\n    }, [])\r\n\r\n    async function RetrieveItems(){\r\n        \r\n        const cafetarians:any = await axios.get('/api/Cafetarian/retrieveCafetarian')\r\n        dispatch(RetrieveCafetarianAction(cafetarians.data[0]))\r\n    \r\n    }\r\n\r\n    const ChangeItemDiv = (state:string) =>{\r\n        let itmDiv:any = document.querySelector('.addItems')\r\n        itmDiv.style.display = state\r\n    }\r\n    \r\n    function clean(){\r\n            setFname(\"\")\r\n            setLname(\"\")\r\n            setEmail(\"\")\r\n            setPassword(\"\")\r\n            setSalary(0)\r\n            setDob(\"\")\r\n    }\r\n\r\n    \r\n\r\n    async function AddCafetarian(){\r\n         \r\n        setBtn(\"Add Cafetarian\")\r\n        const hire_date = new Date()\r\n        const registered_by = admin.email\r\n        const cafetarian = JSON.stringify({fname,lname,email,password,salary,dob,hire_date,registered_by})\r\n\r\n        const isSuccess:any = await axios.post('/api/Cafetarian/addCafetarian',{cafetarian})\r\n        \r\n        // data[0] has item data , data[1] has success status i.e true,false\r\n        \r\n        if(isSuccess.data[1].success){\r\n            console.log(isSuccess.data[0])\r\n            dispatch(AddCafetarianAction(isSuccess.data[0]))\r\n            ChangeItemDiv('none')\r\n            alert('Cafetarian Added...')\r\n            clean()\r\n        }\r\n        else{\r\n            alert('Invalid info....')\r\n        }\r\n    } \r\n\r\n    function HandleAddCafetarian(){\r\n            setBtn(\"Add Cafetarian\")\r\n            setFname(\"\")\r\n            setLname(\"\")\r\n            setDob(\"\")\r\n            setPassword(\"\")\r\n            setEmail(\"\")\r\n            setSalary(0)\r\n            ChangeItemDiv('block')\r\n    }\r\n    \r\n    function HandleUpdateCafetarian(cafetarian:Icafetarian){\r\n            \r\n            setBtn(\"Update Cafetarian\")\r\n            setFname(cafetarian.fname)\r\n            setLname(cafetarian.lname)\r\n            setDob(cafetarian.dob)\r\n            setPassword(cafetarian.password)\r\n            setEmail(cafetarian.email)\r\n            setSalary(cafetarian.salary)\r\n            ChangeItemDiv('block')\r\n\r\n    }\r\n\r\n    async function UpdateCafetarian(){\r\n\r\n        const cafetarian= JSON.stringify({fname,lname,email,password,salary,dob})\r\n        const res:any = await axios.put('/api/Cafetarian/updateCafetarian',{cafetarian})\r\n        \r\n        if(res.data[1].success){\r\n            \r\n            dispatch(UpdateCafetarianAction(res.data[0]))\r\n            alert('Cafetarian Updated...')\r\n            \r\n        }\r\n        else{\r\n            alert('Invalid Input...')\r\n        }\r\n        ChangeItemDiv('none')\r\n        clean()\r\n        setBtn(\"Add Cafetarian\")\r\n    }\r\n\r\n    async function DeleteCafetarian(email:string){\r\n        const cafetarian = JSON.stringify({email})\r\n        const res:any = await axios.delete('/api/Cafetarian/deleteCafetarian',{params:{cafetarian}})\r\n        if(res.data[1].success){\r\n            \r\n            dispatch(DeleteCafetarianAction(email))\r\n            alert('Cafetarian Deleted...')\r\n        }\r\n        else{\r\n            alert('Invalid Input...')\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"customer-main\">\r\n            <div className=\"contents\">\r\n                <button className=\"btn btn-success btn-lg btn-txt\" onClick={()=>HandleAddCafetarian()}>Add Cafetarian</button>\r\n            \r\n            <div className=\"head\">\r\n                Cafetarians\r\n            </div>\r\n            <table id=\"customers\">\r\n                <tr>\r\n                    <th>First Name</th>\r\n                    <th>Last Name</th>\r\n                    <th>Email</th>\r\n                    <th>Password</th>\r\n                    <th>Salary</th>\r\n                    <th>DOB</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n                {\r\n                    Cafetarians.map(caf=><tr>\r\n                        <td>{caf.fname}</td>\r\n                        <td>{caf.lname}</td>\r\n                        <td>{caf.email}</td>\r\n                        <td>{caf.password}</td>\r\n                        <td>{caf.salary}</td>\r\n                        <td>{caf.dob}</td>\r\n                        <td>\r\n                            <div className=\"btn-container\">\r\n                                <button className=\"btn btn-primary btn-lg btn-wid\" onClick={()=>HandleUpdateCafetarian(caf)}>Update</button>\r\n                                <button className=\"btn btn-danger btn-lg btn-wid\" onClick={()=>DeleteCafetarian(caf.email)}>Delete</button>\r\n                            </div>\r\n                        </td>\r\n                    </tr>)\r\n                }\r\n            </table>\r\n        </div>\r\n\r\n            \r\n        <div className=\"addItems\">\r\n                <div className=\"cross\" onClick={()=>ChangeItemDiv(\"none\")}>\r\n                    X\r\n                </div>            \r\n                <div className=\"itm-details\">\r\n                <div className=\"itm-lbl\">\r\n                    <label >First Name: </label>\r\n                    <input className=\"itm-input\" value={fname} onChange={(e)=>{setFname(e.target.value)}}/>\r\n                </div>\r\n                <div className=\"itm-lbl\">\r\n                    <label >Last Name: </label>\r\n                    <input  className=\"itm-input\" value={lname}  onChange={(e)=>{setLname(e.target.value)}}/>\r\n                </div>\r\n                <div className=\"itm-lbl\">\r\n                    <label >Email: </label>\r\n                    <input  className=\"itm-input\" value={email} onChange={(e)=>{setEmail(e.target.value)}}/>\r\n                </div>\r\n                <div className=\"itm-lbl\">\r\n                    <label >Salary: </label>\r\n                    <input  className=\"itm-input\" value={salary} onChange={(e)=>{setSalary(parseInt(e.target.value))}}/>\r\n                </div>\r\n                <div className=\"itm-lbl\">\r\n                    <label >Password: </label>\r\n                    <input className=\"itm-input\" value={password} onChange={(e)=>{setPassword(e.target.value)}}/>\r\n                </div>\r\n                <div className=\"itm-lbl\">\r\n                    <label>Date Of Birth: </label>\r\n                    <input className=\"itm-input\" value={dob} onChange={(e)=>{setDob(e.target.value)}}/>\r\n                </div>\r\n\r\n                <div className=\"btn-md\">\r\n                    {\r\n                        btn===\"Add Cafetarian\"?\r\n                        <button className=\"bn\" onClick={AddCafetarian}>Add Cafetarian</button>\r\n                        :\r\n                        <button className=\"bn\" onClick={UpdateCafetarian}>Update Cafetarian</button>\r\n                    }\r\n                </div>\r\n            \r\n            </div>\r\n        \r\n        </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cafetarian\r\n\r\n\r\n\r\n","import './App.css';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\n\r\nimport Login from './components/Login/Login'\r\nimport Nav from './components/Nav/Nav';\r\nimport Items from './components/Items/Items';\r\nimport Home from './components/Home/Home';\r\nimport AdminHome from './components/AdminHome/AdminHome';\r\nimport {useSelector} from 'react-redux'\r\nimport { RootState } from './redux/store';\r\n\r\n\r\nfunction App() {\r\n  \r\n  const loginCredentials = useSelector((state:RootState) => state.LoginReducer)\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n            \r\n      {loginCredentials?.success?<Nav/>:null}\r\n          {loginCredentials?.success?\r\n            loginCredentials?.admin?\r\n              <Switch>\r\n                <Route exact path=\"/\">\r\n                  \r\n                  <AdminHome/>\r\n                   \r\n                  </Route>\r\n                </Switch>\r\n            :\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Home/>\r\n              </Route>\r\n              <Route path=\"/items\">\r\n                <Items/>\r\n              </Route>\r\n            </Switch>\r\n              :\r\n            <Route exact path=\"/\"> \r\n                <Login/>\r\n            </Route>\r\n            \r\n          }\r\n          \r\n          \r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {Update_Login} from '../constants/Constants'\r\nimport { Ilogin } from '../Interface/Login'\r\n\r\nconst initialState:Ilogin = {success:false}\r\n\r\ninterface Iaction{\r\n    type:string,\r\n    payload:Ilogin\r\n}\r\n\r\nexport const LoginReducer = (state=initialState,action:Iaction)=>{\r\n    switch(action.type){\r\n\r\n        case Update_Login:\r\n            return state=action.payload\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","import {Retrieve_Items, Update_Item, Add_Item, Delete_Item} from '../constants/Constants'\r\nimport { Iitem } from '../Interface/Item'\r\n\r\nconst initialState:Array<Iitem> = []\r\n\r\ninterface Iaction{\r\n    type:string,\r\n    payload:Array<Iitem>\r\n}\r\n\r\nexport const ItemReducer = (state=initialState,action:Iaction & {payload:number})=>{\r\n    switch(action.type){\r\n\r\n        case Retrieve_Items:\r\n            return state=action.payload\r\n        \r\n        case Add_Item:\r\n            return [action.payload[0],...state]\r\n\r\n        case Update_Item:\r\n            return state.map(item=>item.item_id===action.payload[0].item_id?action.payload[0]:item)\r\n\r\n        case Delete_Item:\r\n            return state.filter(item=>item.item_id!==action.payload)\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","import {Retrieve_Cafetarian, Update_Cafetarian, Add_Cafetarian, Delete_Cafetarian} from '../constants/Constants'\r\nimport { Icafetarian } from '../Interface/Cafetarian'\r\n\r\nconst initialState:Array<Icafetarian> = []\r\n\r\ninterface Iaction{\r\n    type:string,\r\n    payload:Array<Icafetarian>\r\n}\r\n\r\nexport const CafetarianReducer = (state=initialState,action:Iaction & {payload:string})=>{\r\n    switch(action.type){\r\n\r\n        case Retrieve_Cafetarian:\r\n            return state=action.payload\r\n        \r\n        case Add_Cafetarian:\r\n            return [action.payload[0],...state]\r\n\r\n        case Update_Cafetarian:\r\n            return state.map(caf=>caf.email===action.payload[0].email?action.payload[0]:caf)\r\n\r\n        case Delete_Cafetarian:\r\n            return state.filter(caf=>caf.email!==action.payload)\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","import { combineReducers,createStore } from 'redux'\r\nimport {LoginReducer} from './reducers/LoginReducer'\r\nimport {ItemReducer} from './reducers/ItemReducer'\r\nimport {CafetarianReducer} from './reducers/CafetarianReducer'\r\nconst rootReducer= combineReducers(\r\n{\r\n    LoginReducer,\r\n    ItemReducer,\r\n    CafetarianReducer\r\n}\r\n\r\n)\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\nexport const store = createStore(rootReducer)","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {store} from './redux/store'\r\nimport {Provider} from 'react-redux'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}