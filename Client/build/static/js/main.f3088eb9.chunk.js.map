{"version":3,"sources":["redux/constants/Constants.ts","redux/actions/LoginAction.ts","components/Login/Login.tsx","components/Nav/Nav.tsx","redux/actions/AddItemAction.ts","redux/actions/UpdateItemAction.ts","redux/actions/AddCategoryAction.ts","components/Items/Items.tsx","redux/actions/RetrieveItemsAction.ts","redux/actions/RetrieveCategoryAction.ts","components/Home/Home.tsx","redux/actions/RetrieveOrderAction.ts","redux/actions/UpdateOrderStatusAction.ts","components/Order/Order.tsx","redux/actions/AddCafetarianAction.ts","redux/actions/UpdateCafetarianAction.ts","redux/actions/DeleteCafetarianAction.ts","redux/actions/RetrieveCafetarianAction.ts","components/AdminHome/AdminHome.tsx","App.tsx","redux/reducers/LoginReducer.ts","redux/reducers/ItemReducer.ts","redux/reducers/CafetarianReducer.ts","redux/reducers/CategoryReducer.ts","redux/reducers/OrderReducer.ts","redux/store.ts","reportWebVitals.ts","index.tsx"],"names":["Update_Login","Retrieve_Items","Add_Item","Update_Item","Delete_Item","Retrieve_Cafetarian","Add_Cafetarian","Update_Cafetarian","Delete_Cafetarian","Add_Category","Retrieve_Category","Retrieve_Order","Update_Order","LoginAction","params","type","payload","Login","useState","email","setEmail","password","setPassword","dispatch","useDispatch","e","a","preventDefault","isChecked","document","querySelector","admin","checked","loginCredentials","JSON","stringify","axios","get","isSuccess","data","success","alert","className","placeholder","onChange","target","value","onClick","handleLogin","Nav","useSelector","state","LoginReducer","to","href","AddItemAction","UpdateItemAction","AddCategory","Items","iname","setIname","price","setPrice","available_qty","setAvailableQty","item_id","setItemId","btn","setBtn","catg","setCatg","ItemReducer","category","CategoryReducer","ChangeItemDiv","style","display","clean","item_category","i","length","label","item","post","console","log","put","res","mapCat","itm","cat_id","cat_name","prompt","HandleAddCategory","id","map","HandleUpdateItem","DeleteItem","min","parseInt","isMulti","options","cat","RetrieveItemsAction","RetrieveCategoryAction","Home","items","useEffect","RetrieveItems","RetrieveCategory","RetrieveOrderAction","UpdateOrderStatusAction","Order","orders","OrderReducer","showOrders","setshowOrders","findItemName","order","ChangeOrderStatus","uorder","status","order_id","RetrieveOrder","socketIOClient","on","HandleOrderChange","filter","students","first_name","description","total_price","order_items","qty","AddCafetarianAction","UpdateCafetarianAction","DeleteCafetarianAction","RetrieveCafetarianAction","Cafetarian","fname","setFname","lname","setLname","salary","setSalary","dob","setDob","Cafetarians","CafetarianReducer","cafetarians","hire_date","Date","registered_by","cafetarian","delete","caf","DeleteCafetarian","App","exact","path","AdminHome","initialState","rootReducer","combineReducers","action","ord","store","createStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f3088eb9.chunk.js","sourcesContent":["export const Update_Login = 'Update_Login';\r\nexport const Retrieve_Items = 'Retrieve_Items';\r\nexport const Add_Item = 'Add_Item';\r\nexport const Update_Item = 'Update_Item';\r\nexport const Delete_Item = 'Delete_Item';\r\nexport const Retrieve_Cafetarian = 'Retrieve_Cafetarian';\r\nexport const Add_Cafetarian = 'Add_Cafetarian';\r\nexport const Update_Cafetarian = 'Update_Cafetarian';\r\nexport const Delete_Cafetarian = 'Delete_Cafetarian';\r\nexport const Add_Category = 'Add_Category';\r\nexport const Retrieve_Category = 'Retrieve_Category';\r\nexport const Retrieve_Order = 'Retrieve_Order';\r\nexport const Update_Order = 'Update_Order';","import {Update_Login} from '../constants/Constants'\r\nimport { Ilogin } from '../Interface/Login'\r\n\r\nexport const LoginAction = (params:Ilogin) =>{\r\n    return{\r\n        type:Update_Login,\r\n        payload:params\r\n    }\r\n}","import './login.css'\r\nimport {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {useDispatch} from 'react-redux'\r\nimport {LoginAction} from '../../redux/actions/LoginAction'\r\n\r\nfunction Login() {\r\n    \r\n    const [email,setEmail] = useState<string>('')\r\n    const [password,setPassword] = useState<string>('')\r\n    const dispatch = useDispatch()\r\n\r\n    async function handleLogin(e:any){\r\n        \r\n        e.preventDefault()\r\n        const isChecked:any=document.querySelector('.chkbx')\r\n        const admin = isChecked.checked\r\n        const loginCredentials = JSON.stringify({email,password,admin})\r\n\r\n        const isSuccess:any = await axios.get('/api/login',{\r\n            params:loginCredentials\r\n        })\r\n        \r\n        if(isSuccess.data.success){\r\n            dispatch(LoginAction(isSuccess.data))\r\n        }\r\n        else{\r\n            alert('Invalid Credentials...')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <p className=\"sign\" >Sign in</p>\r\n            <form className=\"form1\">\r\n                <input className=\"un \" type=\"text\" placeholder=\"Email\" onChange={(e)=>{setEmail(e.target.value)}}/>\r\n                <input className=\"un\" type=\"password\" placeholder=\"Password\" onChange={(e)=>{setPassword(e.target.value)}}/>\r\n                <div className=\"login\">\r\n                <button className=\"submit\" onClick={(e)=>handleLogin(e)}>Sign in</button>\r\n                <div className=\"checkbox\">\r\n                    <input type=\"checkbox\" className=\"chkbx\"/>\r\n                    Login as admin\r\n                </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n    \r\n    export default Login\r\n    ","import './nav.css';\r\nimport {Link} from 'react-router-dom';\r\nimport { RootState } from '../../redux/store';\r\nimport {useSelector} from 'react-redux'\r\n\r\nfunction Nav() {\r\n    const loginCredentials = useSelector((state:RootState) => state.LoginReducer)\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"nav-logo\">FASTCafe</div>\r\n               \r\n               {loginCredentials.admin?\r\n                    \r\n                    <div className=\"nav-links\">\r\n                        <Link to=\"/\" className=\"link\"><p >Home</p></Link>\r\n                        <a href=\"/\" className=\"a-link\">Logout</a>\r\n                    </div>\r\n                    \r\n                    :\r\n                    \r\n                    <div className=\"nav-links\">\r\n                        <Link to=\"/\" className=\"link\"><p >Home</p></Link>\r\n                        <Link to=\"/items\" className=\"link\"><p >Items</p></Link>\r\n                        <Link to=\"/orders\" className=\"link\"><p >Orders</p></Link>\r\n                        <a href=\"/\" className=\"a-link\">Logout</a>       \r\n                    </div>\r\n                }\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import {Add_Item} from '../constants/Constants'\r\nimport { Iitem } from '../Interface/Item'\r\n\r\nexport const AddItemAction = (params:Iitem) =>{\r\n    return{\r\n        type:Add_Item,\r\n        payload:[params]\r\n    }\r\n}","import {Update_Item} from '../constants/Constants'\r\nimport { Iitem } from '../Interface/Item'\r\n\r\nexport const UpdateItemAction = (params:Iitem) =>{\r\n    return{\r\n        type:Update_Item,\r\n        payload:[params]\r\n    }\r\n}","import {Add_Category} from '../constants/Constants'\r\nimport { Icategory } from '../Interface/Category'\r\n\r\nexport const AddCategory = (params:Icategory) =>{\r\n    return{\r\n        type:Add_Category,\r\n        payload:[params]\r\n    }\r\n}","import {useState} from 'react'\r\nimport axios from 'axios'\r\nimport './items.css';\r\nimport {useDispatch} from 'react-redux'\r\n\r\nimport {AddItemAction} from '../../redux/actions/AddItemAction'\r\nimport {useSelector} from 'react-redux'\r\nimport { RootState } from '../../redux/store';\r\nimport { Iitem } from '../../redux/Interface/Item';\r\nimport { UpdateItemAction } from '../../redux/actions/UpdateItemAction';\r\nimport {DeleteItemAction} from '../../redux/actions/DeleteItemAction'\r\nimport Select from 'react-select'\r\nimport { AddCategory } from '../../redux/actions/AddCategoryAction';\r\nimport { Icategory } from '../../redux/Interface/Category';\r\n\r\n\r\nfunction Items() {\r\n    \r\n    \r\n\r\n    const [iname, setIname] = useState<string>('')\r\n    const [price,setPrice] = useState<number>(0)\r\n    const [available_qty,setAvailableQty] = useState<number>(0)\r\n    const [item_id,setItemId] = useState<number>()\r\n    const [btn,setBtn] = useState<string>(\"Add Item\")\r\n    const [catg,setCatg] = useState<any>([]) \r\n    \r\n    const dispatch = useDispatch()\r\n    const Items = useSelector((state:RootState) => state.ItemReducer)\r\n    const category = useSelector((state:RootState)=>state.CategoryReducer)\r\n \r\n    const ChangeItemDiv = (state:string) =>{\r\n        let itmDiv:any = document.querySelector('.addItems')\r\n        itmDiv.style.display = state\r\n    }\r\n    \r\n    function clean(){\r\n            setIname(\"\")\r\n            setPrice(0)\r\n            setAvailableQty(0)\r\n            setCatg([])\r\n    }\r\n\r\n\r\n    async function AddItem(){\r\n         \r\n        setBtn(\"Add Item\")\r\n        let item_category:Array<Icategory> = []\r\n        for(let i=0; i<catg.length; i++){\r\n            item_category = [...item_category,{\"cat_id\":catg[i].value,\"cat_name\":catg[i].label}]\r\n        }\r\n        const item = JSON.stringify({iname,price,available_qty,item_category})\r\n\r\n        const isSuccess:any = await axios.post('/api/Item/addItem',{item})\r\n        \r\n        // data[0] has item data , data[1] has success status i.e true,false\r\n        \r\n        if(isSuccess.data[1].success){\r\n            console.log(isSuccess.data[0])\r\n            dispatch(AddItemAction(isSuccess.data[0]))\r\n            ChangeItemDiv('none')\r\n            alert('Item Added...')\r\n            clean()\r\n        }\r\n        else{\r\n            alert('Invalid item info....')\r\n        }\r\n    } \r\n\r\n    function HandleUpdateItem(item:Iitem){\r\n            \r\n            setBtn(\"Update Item\")\r\n            setIname(item.iname)\r\n            setPrice(item.price)\r\n            setItemId(item.item_id)\r\n            setAvailableQty(item.available_qty)\r\n            let itm:Array<any> = []\r\n            console.log(item)\r\n            let cat_name = null\r\n            for(let i=0; i<item.item_category.length; i++){\r\n                \r\n                cat_name = category.map(itm=>item.item_category[i].cat_id===itm.cat_id?itm.cat_name:null)\r\n                \r\n                itm = [...itm,{\"label\":cat_name,\"value\":item.item_category[i].cat_id}]\r\n            }\r\n            console.log(itm)\r\n            setCatg(itm)\r\n            ChangeItemDiv('block')\r\n\r\n    }\r\n    \r\n    \r\n\r\n    async function UpdateItem(){\r\n\r\n        let item_category:Array<Icategory> = []\r\n        for(let i=0; i<catg.length; i++){\r\n            item_category = [...item_category,{\"cat_id\":catg[i].value,\"cat_name\":catg[i].label}]\r\n        }\r\n\r\n        const item= JSON.stringify({iname,item_id,price,available_qty,item_category})\r\n        const res:any = await axios.put('/api/Item/updateItem',{item})\r\n        \r\n        if(res.data[1].success){\r\n            dispatch(UpdateItemAction(res.data[0]))\r\n            clean()\r\n            ChangeItemDiv('none')\r\n            alert('Item Updated...')\r\n\r\n        }\r\n        else{\r\n            alert('Invalid Input...')\r\n        }\r\n    }\r\n\r\n    async function DeleteItem(item:Iitem){\r\n        let item_id:any = item.item_id\r\n        item_id = JSON.stringify({item_id})\r\n        const res:any = await axios.put('/api/Item/deleteItem',{item_id})\r\n        if(res.data[1].success){\r\n            item.available_qty=0\r\n            dispatch(UpdateItemAction(item))\r\n            alert('Item Deleted...')\r\n        }\r\n        else{\r\n            alert('Invalid Item...')\r\n        }\r\n\r\n    }\r\n\r\n    function HandleAddItem (){\r\n            setBtn(\"Add Item\")\r\n            setIname('')\r\n            setPrice(0)\r\n            setAvailableQty(0)\r\n            ChangeItemDiv(\"block\")\r\n    }\r\n    \r\n  \r\n    function mapCat(itm:any){\r\n        for(let i=0; i<category.length; i++){\r\n            if(itm.cat_id===category[i].cat_id){\r\n                return category[i].cat_name\r\n            }\r\n        }\r\n    }\r\n\r\n    async function HandleAddCategory(){\r\n        \r\n        let cat_name:any = prompt(\"Category Name: \")\r\n        if(cat_name){\r\n            const category = JSON.stringify({cat_name})\r\n            \r\n            if(cat_name.length>0){\r\n                const res:any = await axios.post('/api/Item/addCategory',{category})\r\n\r\n                if(res.data[1].success){\r\n                    alert('Category added...')\r\n                    dispatch(AddCategory(res.data[0]))\r\n                }\r\n                else{\r\n                    alert('Invalid category..')\r\n                }\r\n            }\r\n            else{\r\n                alert('Invalid Input')\r\n            }\r\n    }\r\n\r\n    \r\n    \r\n    }\r\n        \r\n    return (\r\n        <div className=\"customer-main\">\r\n            \r\n            <div className=\"contents\">\r\n                <div className=\"top-btns\">\r\n                    <button className=\"btn btn-success btn-lg btn-txt\" onClick={()=>HandleAddItem()}>Add Item</button>\r\n                    <button className=\"btn btn-success btn-lg btn-txt\" onClick={()=>HandleAddCategory()}>Add Category</button>\r\n                </div>\r\n            <div className=\"head\">\r\n                Items   \r\n            </div>\r\n            <div className=\"scrollist\">\r\n                <table id=\"customers\">\r\n                    <tr>\r\n                        <th>Id</th>\r\n                        <th>Name</th>\r\n                        <th>Price</th>\r\n                        <th>Quantity</th>\r\n                        <th>Category</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                    {\r\n                        Items.map((item)=><tr>\r\n                            <td>{item.item_id}</td>\r\n                            <td>{item.iname}</td>\r\n                            <td>{item.price}</td>\r\n                            <td>{item.available_qty}</td>\r\n                            <td>\r\n                                <select >\r\n                                    {\r\n                                        item.item_category.map(itm=><option>{mapCat(itm)}</option>)\r\n                                        \r\n                                    }\r\n                                    \r\n                                </select>\r\n                            </td>\r\n                            <td>\r\n                            <div className=\"btn-container\">\r\n                                <button className=\"btn btn-primary btn-lg btn-wid\" onClick={()=>HandleUpdateItem(item)}>Update</button>\r\n                                <button className=\"btn btn-danger btn-lg btn-wid\" onClick={()=>DeleteItem(item)}>Delete</button>\r\n                            </div>\r\n                        </td>\r\n                        </tr>)\r\n                    }\r\n                    \r\n                </table>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n            <div className=\"addItems\">\r\n                <div className=\"cross\" onClick={()=>ChangeItemDiv(\"none\")}>\r\n                    X\r\n                </div>            \r\n                <div className=\"itm-details\">\r\n                <div className=\"itm-lbl\">\r\n                    <label >Name: </label>\r\n                    <input className=\"itm-input\" value={iname} onChange={(e)=>{setIname(e.target.value)}}/>\r\n                </div>\r\n                <div className=\"itm-lbl\">\r\n                    <label >Price: </label>\r\n                    <input type=\"number\" className=\"itm-input\" min=\"0\" value={price}  onChange={(e)=>{setPrice(parseInt(e.target.value))}}/>\r\n                </div>\r\n                <div className=\"itm-lbl\">\r\n                    <label >Quantity: </label>\r\n                    <input type=\"number\" className=\"itm-input\" min=\"0\" value={available_qty} onChange={(e)=>{setAvailableQty(parseInt(e.target.value))}}/>\r\n                </div>\r\n                \r\n                <div className=\"itm-lbl\">\r\n                     \r\n                     <label >Category: </label>\r\n                     <Select isMulti value={catg} onChange={(e)=>{setCatg(e)}} options={category.map(cat=>({\"value\":cat.cat_id,\"label\":cat.cat_name}))}></Select>\r\n                </div>\r\n\r\n                <div className=\"btn-md\">\r\n                    {\r\n                        btn===\"Add Item\"?\r\n                        <button className=\"bn\" onClick={AddItem}>Add Item</button>\r\n                        :\r\n                        <button className=\"bn\" onClick={UpdateItem}>Update Item</button>\r\n                    }\r\n                </div>\r\n            \r\n            </div>\r\n\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Items\r\n","import {Retrieve_Items} from '../constants/Constants'\r\nimport { Iitem } from '../Interface/Item'\r\n\r\nexport const RetrieveItemsAction = (params:Array<Iitem>) =>{\r\n    return{\r\n        type:Retrieve_Items,\r\n        payload:params\r\n    }\r\n}","import {Retrieve_Category} from '../constants/Constants'\r\nimport { Icategory } from '../Interface/Category'\r\n\r\nexport const RetrieveCategoryAction = (params:Array<Icategory>) =>{\r\n    return{\r\n        type:Retrieve_Category,\r\n        payload:params\r\n    }\r\n}","import {useEffect} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport axios from 'axios'\r\nimport { RootState } from '../../redux/store'\r\nimport {RetrieveItemsAction} from '../../redux/actions/RetrieveItemsAction'\r\nimport {useDispatch} from 'react-redux'\r\nimport './home.css';\r\nimport { RetrieveCategoryAction } from '../../redux/actions/RetrieveCategoryAction'\r\n\r\nfunction Home() {\r\n\r\n    const dispatch = useDispatch()\r\n    const Items = useSelector((state:RootState) => state.ItemReducer)\r\n    const category = useSelector((state:RootState)=>state.CategoryReducer)\r\n    \r\n    useEffect(() => {\r\n        RetrieveItems()\r\n        RetrieveCategory()\r\n    }, [])\r\n\r\n    function mapCat(itm:any){\r\n        for(let i=0; i<category.length; i++){\r\n            if(itm.cat_id===category[i].cat_id){\r\n                return category[i].cat_name\r\n            }\r\n        }\r\n    }\r\n\r\n    async function RetrieveCategory(){\r\n        const category:any = await axios.get('/api/Item/retrieveCategory')\r\n  \r\n        dispatch(RetrieveCategoryAction(category.data[0]))\r\n      \r\n    }\r\n\r\n    async function RetrieveItems(){\r\n        \r\n        const items:any = await axios.get('/api/Item/retrieveItem')\r\n        console.log(items.data)\r\n        dispatch(RetrieveItemsAction(items.data[0]))\r\n        console.log(Items)\r\n    }\r\n\r\n    return (\r\n        <div className=\"contents\">\r\n        <div className=\"customer-main\">\r\n                <table id=\"customers\">\r\n                    <tr>\r\n                        <th>Id</th>\r\n                        <th>Name</th>\r\n                        <th>Price</th>\r\n                        <th>Quantity</th>\r\n                        <th>Category</th>\r\n                    </tr>\r\n                    {\r\n                        Items.map((item)=><tr>\r\n                            <td>{item.item_id}</td>\r\n                            <td>{item.iname}</td>\r\n                            <td>{item.price}</td>\r\n                            <td>{item.available_qty}</td>\r\n                            <td>\r\n                                <select >\r\n                                    {\r\n                                        item.item_category.map(itm=><option>{mapCat(itm)}</option>)\r\n                                        \r\n                                    }\r\n                                    \r\n                                </select>\r\n                            </td>\r\n                            \r\n                        </tr>)\r\n                    }\r\n                    \r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import {Retrieve_Order} from '../constants/Constants'\r\n\r\nexport const RetrieveOrderAction = (params:Array<any>) =>{\r\n    return{\r\n        type:Retrieve_Order,\r\n        payload:params\r\n    }\r\n}","import {Update_Order} from '../constants/Constants'\r\n\r\nexport const UpdateOrderStatusAction = (params:any) =>{\r\n    return{\r\n        type:Update_Order,\r\n        payload:params\r\n    }\r\n}","import {useEffect,useState} from 'react'\r\nimport './order.css'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport axios from 'axios'\r\nimport { RootState } from '../../redux/store'\r\nimport { RetrieveOrderAction } from '../../redux/actions/RetrieveOrderAction'\r\nimport { UpdateOrderStatusAction } from '../../redux/actions/UpdateOrderStatusAction'\r\nimport { IOrder } from '../../redux/Interface/Order'\r\nimport socketIOClient from \"socket.io-client\";\r\nimport {RetrieveItemsAction} from '../../redux/actions/RetrieveItemsAction'\r\nconst ENDPOINT = \"https://fastcafe091.herokuapp.com/\";\r\n// const ENDPOINT = \"http://localhost:8000/\";\r\n\r\n\r\nfunction Order() {\r\n    \r\n    const dispatch = useDispatch()\r\n    const orders:Array<IOrder>  = useSelector((state:RootState)=>state.OrderReducer)\r\n    // var showOrders:Array<IOrder> = orders\r\n    const [showOrders, setshowOrders] = useState<Array<IOrder>>(orders)\r\n    // F failed\r\n    // I in progress\r\n    // C Completed\r\n    // R ready\r\n\r\n\r\n    useEffect(() => {\r\n        RetrieveOrder()\r\n        const socket = socketIOClient(ENDPOINT);\r\n        socket.on(\"Order\",(orders)=>HandleOrderChange(orders))\r\n        // socket.on(\"Order\",(orders)=>console.log(orders))\r\n\r\n    }, [])\r\n\r\n    async function HandleOrderChange(orders:Array<IOrder>){\r\n            // console.log(orders)\r\n            dispatch(RetrieveOrderAction(orders))\r\n            setshowOrders(orders)\r\n\r\n            //Order is placed so items quantity must also update\r\n        \r\n            const items:any = await axios.get('/api/Item/retrieveItem')\r\n            dispatch(RetrieveItemsAction(items.data[0]))\r\n            \r\n    }\r\n    \r\n    async function RetrieveOrder(){\r\n        const res:any = await axios.get('/api/Order/retrieveOrder')\r\n        // console.log(res.data[0])\r\n        dispatch(RetrieveOrderAction(res.data[0]))\r\n        setshowOrders(res.data[0])\r\n    }\r\n\r\n    function findItemName(order:any,item:any){\r\n        for(let i=0; i<order.item.length; i++){\r\n            if(order.item[i].item_id===item.item_id){\r\n                return order.item[i].iname\r\n            }\r\n        }\r\n    }\r\n   \r\n    function ChangeOrderDisplay(status:any){\r\n        if(status===\"A\"){\r\n           setshowOrders(orders)\r\n        }\r\n        else{\r\n            setshowOrders(orders.filter((order)=>order.status===status))     \r\n        }\r\n    }\r\n\r\n    async function ChangeOrderStatus(uorder:any,status:any){\r\n        const order_id = uorder.order_id\r\n        const order= JSON.stringify({order_id,status})\r\n        const res:any = await axios.put('/api/Order/updateStatus',{order})\r\n        if(res.data[1].success){\r\n            uorder.status=status\r\n            \r\n            dispatch(UpdateOrderStatusAction(uorder))\r\n            // ChangeOrderDisplay(status)\r\n        }\r\n        else{\r\n            alert(\"Invalid order....\")\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"order-container\">\r\n            <div className=\"select-container\">\r\n                <select className=\"select\" onChange={(e)=>ChangeOrderDisplay(e.target.value)}>\r\n                    <option value=\"A\">All</option>\r\n                    <option value=\"R\">Ready</option>\r\n                    <option value=\"C\">Completed</option>\r\n                    <option value=\"I\">Pending</option>\r\n                </select>\r\n            </div>\r\n            {\r\n                showOrders.map(order=>(<div className=\"order-card\">\r\n                <div className=\"order-details\">\r\n                    \r\n                    <div>\r\n                        <span><b>Order Id: </b></span>\r\n                        <span >{order.order_id}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span><b>Name: </b></span>\r\n                        <span>{order.students?.first_name}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span><b>Description: </b></span>\r\n                        <span>{order.description}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span><b>Total Amount: </b></span>\r\n                        <span>{order.total_price}</span>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    order.order_items.map(itm=><div className=\"order-items\">\r\n                    <div>\r\n                        <span><b>Item Name: </b></span>\r\n                        <span>{findItemName(order,itm)}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span><b>Quantity: </b></span>\r\n                        <span>{itm.qty}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span><b>Price: </b></span>\r\n                        <span>{itm.price}</span>\r\n                    </div>\r\n                </div>)\r\n                }\r\n                {\r\n                    order.status==='I'?\r\n                    <div className=\"btn-container-order\">\r\n                        \r\n                            <button className=\"btn btn-success btn-lg btn-wid\" onClick={()=>{ChangeOrderStatus(order,\"R\")}}>Ready</button>\r\n                            <button className=\"btn btn-primary btn-lg btn-wid\" onClick={()=>{ChangeOrderStatus(order,\"C\")}}>Completed</button>\r\n                        \r\n                    </div>:order.status==='R'?<div className=\"btn-container-order\">\r\n                        <button className=\"btn btn-primary btn-lg btn-wid\" onClick={()=>{ChangeOrderStatus(order,\"C\")}}>Completed</button>\r\n                    <p className=\"completed-p\">Order is Ready</p>\r\n                    \r\n                </div>:<p className=\"completed-p\">Completed</p>\r\n                    \r\n                }\r\n                \r\n            </div>  \r\n))\r\n            }            \r\n                    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Order\r\n","import {Add_Cafetarian} from '../constants/Constants'\r\nimport { Icafetarian } from '../Interface/Cafetarian'\r\n\r\nexport const AddCafetarianAction = (params:Icafetarian) =>{\r\n    return{\r\n        type:Add_Cafetarian,\r\n        payload:[params]\r\n    }\r\n}","import {Update_Cafetarian} from '../constants/Constants'\r\nimport { Icafetarian } from '../Interface/Cafetarian'\r\n\r\nexport const UpdateCafetarianAction = (params:Icafetarian) =>{\r\n    return{\r\n        type:Update_Cafetarian,\r\n        payload:[params]\r\n    }\r\n}","import {Delete_Cafetarian} from '../constants/Constants'\r\n\r\nexport const DeleteCafetarianAction = (params:string) =>{\r\n    return{\r\n        type:Delete_Cafetarian,\r\n        payload:params\r\n    }\r\n}","import {Retrieve_Cafetarian} from '../constants/Constants'\r\nimport { Icafetarian } from '../Interface/Cafetarian'\r\n\r\nexport const RetrieveCafetarianAction = (params:Array<Icafetarian>) =>{\r\n    return{\r\n        type:Retrieve_Cafetarian,\r\n        payload:params\r\n    }\r\n}","import './adminhome.css';\r\n\r\nimport {useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {useDispatch} from 'react-redux'\r\n\r\nimport {AddCafetarianAction} from '../../redux/actions/AddCafetarianAction'\r\nimport {useSelector} from 'react-redux'\r\nimport { RootState } from '../../redux/store';\r\nimport { Icafetarian } from '../../redux/Interface/Cafetarian';\r\nimport { UpdateCafetarianAction } from '../../redux/actions/UpdateCafetarianAction';\r\nimport {DeleteCafetarianAction} from '../../redux/actions/DeleteCafetarianAction'\r\nimport {RetrieveCafetarianAction} from '../../redux/actions/RetrieveCafetarianAction'\r\n\r\nfunction Cafetarian() {\r\n\r\n    const [fname, setFname] = useState<string>('')\r\n    const [lname, setLname] = useState<string>('')\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [salary, setSalary] = useState<number>(0)\r\n    const [dob,setDob] = useState<string>('')\r\n    const [btn,setBtn] = useState<string>(\"Add Cafetarian\") \r\n\r\n    const dispatch = useDispatch()\r\n    const Cafetarians = useSelector((state:RootState) => state.CafetarianReducer)\r\n    const admin = useSelector((state:RootState)=>state.LoginReducer)\r\n\r\n\r\n    useEffect(() => {\r\n        RetrieveItems()\r\n    }, [])\r\n\r\n    async function RetrieveItems(){\r\n        \r\n        const cafetarians:any = await axios.get('/api/Cafetarian/retrieveCafetarian')\r\n        dispatch(RetrieveCafetarianAction(cafetarians.data[0]))\r\n    \r\n    }\r\n\r\n    const ChangeItemDiv = (state:string) =>{\r\n        let itmDiv:any = document.querySelector('.addItems')\r\n        itmDiv.style.display = state\r\n    }\r\n    \r\n    function clean(){\r\n            setFname(\"\")\r\n            setLname(\"\")\r\n            setEmail(\"\")\r\n            setPassword(\"\")\r\n            setSalary(0)\r\n            setDob(\"\")\r\n    }\r\n\r\n    \r\n\r\n    async function AddCafetarian(){\r\n         \r\n        setBtn(\"Add Cafetarian\")\r\n        const hire_date = new Date()\r\n        const registered_by = admin.email\r\n        const cafetarian = JSON.stringify({fname,lname,email,password,salary,dob,hire_date,registered_by})\r\n\r\n        const isSuccess:any = await axios.post('/api/Cafetarian/addCafetarian',{cafetarian})\r\n        \r\n        // data[0] has item data , data[1] has success status i.e true,false\r\n        \r\n        if(isSuccess.data[1].success){\r\n            console.log(isSuccess.data[0])\r\n            dispatch(AddCafetarianAction(isSuccess.data[0]))\r\n            ChangeItemDiv('none')\r\n            alert('Cafetarian Added...')\r\n            clean()\r\n        }\r\n        else{\r\n            alert('Invalid info....')\r\n        }\r\n    } \r\n\r\n    function HandleAddCafetarian(){\r\n            setBtn(\"Add Cafetarian\")\r\n            setFname(\"\")\r\n            setLname(\"\")\r\n            setDob(\"\")\r\n            setPassword(\"\")\r\n            setEmail(\"\")\r\n            setSalary(0)\r\n            ChangeItemDiv('block')\r\n    }\r\n    \r\n    function HandleUpdateCafetarian(cafetarian:Icafetarian){\r\n            \r\n            setBtn(\"Update Cafetarian\")\r\n            setFname(cafetarian.fname)\r\n            setLname(cafetarian.lname)\r\n            setDob(cafetarian.dob)\r\n            setPassword(cafetarian.password)\r\n            setEmail(cafetarian.email)\r\n            setSalary(cafetarian.salary)\r\n            ChangeItemDiv('block')\r\n\r\n    }\r\n\r\n    async function UpdateCafetarian(){\r\n\r\n        const cafetarian= JSON.stringify({fname,lname,email,password,salary,dob})\r\n        const res:any = await axios.put('/api/Cafetarian/updateCafetarian',{cafetarian})\r\n        \r\n        if(res.data[1].success){\r\n            \r\n            dispatch(UpdateCafetarianAction(res.data[0]))\r\n            alert('Cafetarian Updated...')\r\n            \r\n        }\r\n        else{\r\n            alert('Invalid Input...')\r\n        }\r\n        ChangeItemDiv('none')\r\n        clean()\r\n        setBtn(\"Add Cafetarian\")\r\n    }\r\n\r\n    async function DeleteCafetarian(email:string){\r\n        const cafetarian = JSON.stringify({email})\r\n        const res:any = await axios.delete('/api/Cafetarian/deleteCafetarian',{params:{cafetarian}})\r\n        if(res.data[1].success){\r\n            \r\n            dispatch(DeleteCafetarianAction(email))\r\n            alert('Cafetarian Deleted...')\r\n        }\r\n        else{\r\n            alert('Invalid Input...')\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"customer-main\">\r\n            <div className=\"contents\">\r\n                <button className=\"btn btn-success btn-lg btn-txt\" onClick={()=>HandleAddCafetarian()}>Add Cafetarian</button>\r\n            \r\n            <div className=\"head\">\r\n                Cafetarians\r\n            </div>\r\n            <table id=\"customers\">\r\n                <tr>\r\n                    <th>First Name</th>\r\n                    <th>Last Name</th>\r\n                    <th>Email</th>\r\n                    <th>Password</th>\r\n                    <th>Salary</th>\r\n                    <th>DOB</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n                {\r\n                    Cafetarians.map(caf=><tr>\r\n                        <td>{caf.fname}</td>\r\n                        <td>{caf.lname}</td>\r\n                        <td>{caf.email}</td>\r\n                        <td>{caf.password}</td>\r\n                        <td>{caf.salary}</td>\r\n                        <td>{caf.dob}</td>\r\n                        <td>\r\n                            <div className=\"btn-container\">\r\n                                <button className=\"btn btn-primary btn-lg btn-wid\" onClick={()=>HandleUpdateCafetarian(caf)}>Update</button>\r\n                                <button className=\"btn btn-danger btn-lg btn-wid\" onClick={()=>DeleteCafetarian(caf.email)}>Delete</button>\r\n                            </div>\r\n                        </td>\r\n                    </tr>)\r\n                }\r\n            </table>\r\n        </div>\r\n\r\n            \r\n        <div className=\"addItems\">\r\n                <div className=\"cross\" onClick={()=>ChangeItemDiv(\"none\")}>\r\n                    X\r\n                </div>            \r\n                <div className=\"itm-details\">\r\n                <div className=\"itm-lbl\">\r\n                    <label >First Name: </label>\r\n                    <input className=\"itm-input\" value={fname} onChange={(e)=>{setFname(e.target.value)}}/>\r\n                </div>\r\n                <div className=\"itm-lbl\">\r\n                    <label >Last Name: </label>\r\n                    <input  className=\"itm-input\" value={lname}  onChange={(e)=>{setLname(e.target.value)}}/>\r\n                </div>\r\n                <div className=\"itm-lbl\">\r\n                    <label >Email: </label>\r\n                    <input  className=\"itm-input\" value={email} onChange={(e)=>{setEmail(e.target.value)}}/>\r\n                </div>\r\n                <div className=\"itm-lbl\">\r\n                    <label >Salary: </label>\r\n                    <input  className=\"itm-input\" value={salary} onChange={(e)=>{setSalary(parseInt(e.target.value))}}/>\r\n                </div>\r\n                <div className=\"itm-lbl\">\r\n                    <label >Password: </label>\r\n                    <input className=\"itm-input\" value={password} onChange={(e)=>{setPassword(e.target.value)}}/>\r\n                </div>\r\n                <div className=\"itm-lbl\">\r\n                    <label>Date Of Birth: </label>\r\n                    <input className=\"itm-input\" value={dob} onChange={(e)=>{setDob(e.target.value)}}/>\r\n                </div>\r\n\r\n                <div className=\"btn-md\">\r\n                    {\r\n                        btn===\"Add Cafetarian\"?\r\n                        <button className=\"bn\" onClick={AddCafetarian}>Add Cafetarian</button>\r\n                        :\r\n                        <button className=\"bn\" onClick={UpdateCafetarian}>Update Cafetarian</button>\r\n                    }\r\n                </div>\r\n            \r\n            </div>\r\n        \r\n        </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cafetarian\r\n\r\n\r\n\r\n","import './App.css';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\n\r\nimport Login from './components/Login/Login'\r\nimport Nav from './components/Nav/Nav';\r\nimport Items from './components/Items/Items';\r\nimport Home from './components/Home/Home';\r\nimport Order from './components/Order/Order';\r\nimport AdminHome from './components/AdminHome/AdminHome';\r\nimport {useSelector} from 'react-redux'\r\nimport { RootState } from './redux/store';\r\n\r\n\r\nfunction App() {\r\n  \r\n  const loginCredentials = useSelector((state:RootState) => state.LoginReducer)\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n            \r\n      {loginCredentials?.success?<Nav/>:null}\r\n          {loginCredentials?.success?\r\n            loginCredentials?.admin?\r\n              <Switch>\r\n                <Route exact path=\"/\">\r\n                  \r\n                  <AdminHome/>\r\n                   \r\n                  </Route>\r\n                </Switch>\r\n            :\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Home/>\r\n              </Route>\r\n              <Route path=\"/items\">\r\n                <Items/>\r\n              </Route>\r\n              <Route path=\"/orders\">\r\n                <Order/>\r\n              </Route>\r\n            </Switch>\r\n              :\r\n            <Route exact path=\"/\"> \r\n                <Login/>\r\n            </Route>\r\n            \r\n          }\r\n          \r\n          \r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {Update_Login} from '../constants/Constants'\r\nimport { Ilogin } from '../Interface/Login'\r\n\r\nconst initialState:Ilogin = {success:false}\r\n\r\ninterface Iaction{\r\n    type:string,\r\n    payload:Ilogin\r\n}\r\n\r\nexport const LoginReducer = (state=initialState,action:Iaction)=>{\r\n    switch(action.type){\r\n\r\n        case Update_Login:\r\n            return state=action.payload\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","import {Retrieve_Items, Update_Item, Add_Item, Delete_Item} from '../constants/Constants'\r\nimport { Iitem } from '../Interface/Item'\r\n\r\nconst initialState:Array<Iitem> = []\r\n\r\ninterface Iaction{\r\n    type:string,\r\n    payload:Array<Iitem>\r\n}\r\n\r\n\r\n\r\nexport const ItemReducer = (state=initialState,action:Iaction & {payload:number})=>{\r\n    switch(action.type){\r\n\r\n        case Retrieve_Items:\r\n            return state=action.payload\r\n        \r\n        case Add_Item:\r\n            return [action.payload[0],...state]\r\n\r\n        case Update_Item:\r\n            return state.map(item=>item.item_id===action.payload[0].item_id?action.payload[0]:item)\r\n\r\n        case Delete_Item:\r\n            return state.filter(item=>item.item_id!==action.payload)\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","import {Retrieve_Cafetarian, Update_Cafetarian, Add_Cafetarian, Delete_Cafetarian} from '../constants/Constants'\r\nimport { Icafetarian } from '../Interface/Cafetarian'\r\n\r\nconst initialState:Array<Icafetarian> = []\r\n\r\ninterface Iaction{\r\n    type:string,\r\n    payload:Array<Icafetarian>\r\n}\r\n\r\nexport const CafetarianReducer = (state=initialState,action:Iaction & {payload:string})=>{\r\n    switch(action.type){\r\n\r\n        case Retrieve_Cafetarian:\r\n            return state=action.payload\r\n        \r\n        case Add_Cafetarian:\r\n            return [action.payload[0],...state]\r\n\r\n        case Update_Cafetarian:\r\n            return state.map(caf=>caf.email===action.payload[0].email?action.payload[0]:caf)\r\n\r\n        case Delete_Cafetarian:\r\n            return state.filter(caf=>caf.email!==action.payload)\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","import {Add_Category,Retrieve_Category} from '../constants/Constants'\r\nimport { Icategory } from '../Interface/Category'\r\n\r\nconst initialState:Array<Icategory> = []\r\n\r\ninterface Iaction{\r\n    type:string,\r\n    payload:Array<Icategory>\r\n}\r\n\r\n\r\n\r\nexport const CategoryReducer = (state=initialState,action:Iaction)=>{\r\n    switch(action.type){\r\n\r\n        case Retrieve_Category:\r\n            return state=action.payload\r\n        \r\n        case Add_Category:\r\n            return [action.payload[0],...state]\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","import {Retrieve_Order} from '../constants/Constants'\r\nimport {Update_Order} from '../constants/Constants'\r\n\r\nconst initialState:Array<any> = []\r\n\r\nexport const OrderReducer = (state=initialState,action:any)=>{\r\n    switch(action.type){\r\n\r\n        case Retrieve_Order:\r\n            return state=action.payload\r\n        \r\n        case Update_Order:\r\n            return state.map(ord=>ord.order_id===action.payload.order_id?action.payload:ord)\r\n        \r\n        default:\r\n            return state\r\n\r\n    }\r\n}","import { combineReducers,createStore } from 'redux'\r\nimport {LoginReducer} from './reducers/LoginReducer'\r\nimport {ItemReducer} from './reducers/ItemReducer'\r\nimport {CafetarianReducer} from './reducers/CafetarianReducer'\r\nimport {CategoryReducer} from './reducers/CategoryReducer'\r\nimport {OrderReducer} from './reducers/OrderReducer'\r\n\r\nconst rootReducer= combineReducers(\r\n{\r\n    LoginReducer,\r\n    ItemReducer,\r\n    CafetarianReducer,\r\n    CategoryReducer,\r\n    OrderReducer\r\n}\r\n\r\n)\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\nexport const store = createStore(rootReducer)","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {store} from './redux/store'\r\nimport {Provider} from 'react-redux'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}