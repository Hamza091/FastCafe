{"version":3,"sources":["redux/constants/Constants.ts","redux/actions/LoginAction.ts","components/Login/Login.tsx","components/Nav/Nav.tsx","redux/actions/AddItemAction.ts","redux/actions/UpdateItemAction.ts","redux/actions/DeleteItemAction.ts","redux/actions/AddCategoryAction.ts","components/Items/Items.tsx","redux/actions/RetrieveItemsAction.ts","redux/actions/RetrieveCategoryAction.ts","components/Home/Home.tsx","redux/actions/AddCafetarianAction.ts","redux/actions/UpdateCafetarianAction.ts","redux/actions/DeleteCafetarianAction.ts","redux/actions/RetrieveCafetarianAction.ts","components/AdminHome/AdminHome.tsx","App.tsx","redux/reducers/LoginReducer.ts","redux/reducers/ItemReducer.ts","redux/reducers/CafetarianReducer.ts","redux/reducers/CategoryReducer.ts","redux/store.ts","reportWebVitals.ts","index.tsx"],"names":["Update_Login","Retrieve_Items","Add_Item","Update_Item","Delete_Item","Retrieve_Cafetarian","Add_Cafetarian","Update_Cafetarian","Delete_Cafetarian","Add_Category","Retrieve_Category","LoginAction","params","type","payload","Login","useState","email","setEmail","password","setPassword","dispatch","useDispatch","e","a","preventDefault","isChecked","document","querySelector","admin","checked","loginCredentials","JSON","stringify","axios","get","isSuccess","data","success","alert","className","placeholder","onChange","target","value","onClick","handleLogin","Nav","useSelector","state","LoginReducer","to","href","AddItemAction","UpdateItemAction","DeleteItemAction","AddCategory","Items","iname","setIname","price","setPrice","available_qty","setAvailableQty","item_id","setItemId","btn","setBtn","catg","setCatg","ItemReducer","category","CategoryReducer","ChangeItemDiv","style","display","clean","item_category","i","length","label","item","post","console","log","put","res","delete","cat_name","prompt","HandleAddCategory","id","map","cat","cat_id","itm","HandleUpdateItem","DeleteItem","parseInt","isMulti","options","RetrieveItemsAction","RetrieveCategoryAction","Home","items","useEffect","RetrieveItems","RetrieveCategory","AddCafetarianAction","UpdateCafetarianAction","DeleteCafetarianAction","RetrieveCafetarianAction","Cafetarian","fname","setFname","lname","setLname","salary","setSalary","dob","setDob","Cafetarians","CafetarianReducer","cafetarians","hire_date","Date","registered_by","cafetarian","caf","DeleteCafetarian","App","exact","path","AdminHome","initialState","rootReducer","combineReducers","action","filter","store","createStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8b760148.chunk.js","sourcesContent":["export const Update_Login = 'Update_Login';\r\nexport const Retrieve_Items = 'Retrieve_Items';\r\nexport const Add_Item = 'Add_Item';\r\nexport const Update_Item = 'Update_Item';\r\nexport const Delete_Item = 'Delete_Item';\r\nexport const Retrieve_Cafetarian = 'Retrieve_Cafetarian';\r\nexport const Add_Cafetarian = 'Add_Cafetarian';\r\nexport const Update_Cafetarian = 'Update_Cafetarian';\r\nexport const Delete_Cafetarian = 'Delete_Cafetarian';\r\nexport const Add_Category = 'Add_Category';\r\nexport const Retrieve_Category = 'Retrieve_Category';","import {Update_Login} from '../constants/Constants'\r\nimport { Ilogin } from '../Interface/Login'\r\n\r\nexport const LoginAction = (params:Ilogin) =>{\r\n    return{\r\n        type:Update_Login,\r\n        payload:params\r\n    }\r\n}","import './login.css'\r\nimport {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {useDispatch} from 'react-redux'\r\nimport {LoginAction} from '../../redux/actions/LoginAction'\r\n\r\nfunction Login() {\r\n    \r\n    const [email,setEmail] = useState<string>('')\r\n    const [password,setPassword] = useState<string>('')\r\n    const dispatch = useDispatch()\r\n\r\n    async function handleLogin(e:any){\r\n        \r\n        e.preventDefault()\r\n        const isChecked:any=document.querySelector('.chkbx')\r\n        const admin = isChecked.checked\r\n        const loginCredentials = JSON.stringify({email,password,admin})\r\n\r\n        const isSuccess:any = await axios.get('/api/login',{\r\n            params:loginCredentials\r\n        })\r\n        \r\n        if(isSuccess.data.success){\r\n            dispatch(LoginAction(isSuccess.data))\r\n        }\r\n        else{\r\n            alert('Invalid Credentials...')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <p className=\"sign\" >Sign in</p>\r\n            <form className=\"form1\">\r\n                <input className=\"un \" type=\"text\" placeholder=\"Email\" onChange={(e)=>{setEmail(e.target.value)}}/>\r\n                <input className=\"un\" type=\"password\" placeholder=\"Password\" onChange={(e)=>{setPassword(e.target.value)}}/>\r\n                <div className=\"login\">\r\n                <button className=\"submit\" onClick={(e)=>handleLogin(e)}>Sign in</button>\r\n                <div className=\"checkbox\">\r\n                    <input type=\"checkbox\" className=\"chkbx\"/>\r\n                    Login as admin\r\n                </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n    \r\n    export default Login\r\n    ","import './nav.css';\r\nimport {Link} from 'react-router-dom';\r\nimport { RootState } from '../../redux/store';\r\nimport {useSelector} from 'react-redux'\r\n\r\nfunction Nav() {\r\n    const loginCredentials = useSelector((state:RootState) => state.LoginReducer)\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"nav-logo\">FASTCafe</div>\r\n               \r\n               {loginCredentials.admin?\r\n                    \r\n                    <div className=\"nav-links\">\r\n                        <Link to=\"/\" className=\"link\"><p >Home</p></Link>\r\n                        <a href=\"/\" className=\"a-link\">Logout</a>\r\n                    </div>\r\n                    \r\n                    :\r\n                    \r\n                    <div className=\"nav-links\">\r\n                        <Link to=\"/\" className=\"link\"><p >Home</p></Link>\r\n                        <Link to=\"/items\" className=\"link\"><p >Items</p></Link>\r\n                        <Link to=\"/\" className=\"link\"><p >Orders</p></Link>\r\n                        <a href=\"/\" className=\"a-link\">Logout</a>       \r\n                    </div>\r\n                }\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import {Add_Item} from '../constants/Constants'\r\nimport { Iitem } from '../Interface/Item'\r\n\r\nexport const AddItemAction = (params:Iitem) =>{\r\n    return{\r\n        type:Add_Item,\r\n        payload:[params]\r\n    }\r\n}","import {Update_Item} from '../constants/Constants'\r\nimport { Iitem } from '../Interface/Item'\r\n\r\nexport const UpdateItemAction = (params:Iitem) =>{\r\n    return{\r\n        type:Update_Item,\r\n        payload:[params]\r\n    }\r\n}","import {Delete_Item} from '../constants/Constants'\r\n\r\nexport const DeleteItemAction = (params:number) =>{\r\n    return{\r\n        type:Delete_Item,\r\n        payload:params\r\n    }\r\n}","import {Add_Category} from '../constants/Constants'\r\nimport { Icategory } from '../Interface/Category'\r\n\r\nexport const AddCategory = (params:Icategory) =>{\r\n    return{\r\n        type:Add_Category,\r\n        payload:[params]\r\n    }\r\n}","import {useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport './items.css';\r\nimport {useDispatch} from 'react-redux'\r\n\r\nimport {AddItemAction} from '../../redux/actions/AddItemAction'\r\nimport {useSelector} from 'react-redux'\r\nimport { RootState } from '../../redux/store';\r\nimport { Iitem } from '../../redux/Interface/Item';\r\nimport { UpdateItemAction } from '../../redux/actions/UpdateItemAction';\r\nimport {DeleteItemAction} from '../../redux/actions/DeleteItemAction'\r\nimport Select from 'react-select'\r\nimport { AddCategory } from '../../redux/actions/AddCategoryAction';\r\nimport { Icategory } from '../../redux/Interface/Category';\r\n\r\nfunction Items() {\r\n    \r\n    \r\n\r\n    const [iname, setIname] = useState<string>('')\r\n    const [price,setPrice] = useState<number>(0)\r\n    const [available_qty,setAvailableQty] = useState<number>(0)\r\n    const [item_id,setItemId] = useState<number>()\r\n    const [btn,setBtn] = useState<string>(\"Add Item\")\r\n    const [catg,setCatg] = useState<any>([]) \r\n    \r\n    const dispatch = useDispatch()\r\n    const Items = useSelector((state:RootState) => state.ItemReducer)\r\n    const category = useSelector((state:RootState)=>state.CategoryReducer)\r\n \r\n    const ChangeItemDiv = (state:string) =>{\r\n        let itmDiv:any = document.querySelector('.addItems')\r\n        itmDiv.style.display = state\r\n    }\r\n    \r\n    function clean(){\r\n            setIname(\"\")\r\n            setPrice(0)\r\n            setAvailableQty(0)\r\n            setCatg([])\r\n    }\r\n\r\n\r\n    async function AddItem(){\r\n         \r\n        setBtn(\"Add Item\")\r\n        let item_category:Array<Icategory> = []\r\n        for(let i=0; i<catg.length; i++){\r\n            item_category = [...item_category,{\"cat_id\":catg[i].value,\"cat_name\":catg[i].label}]\r\n        }\r\n        const item = JSON.stringify({iname,price,available_qty,item_category})\r\n\r\n        const isSuccess:any = await axios.post('/api/Item/addItem',{item})\r\n        \r\n        // data[0] has item data , data[1] has success status i.e true,false\r\n        \r\n        if(isSuccess.data[1].success){\r\n            console.log(isSuccess.data[0])\r\n            dispatch(AddItemAction(isSuccess.data[0]))\r\n            ChangeItemDiv('none')\r\n            alert('Item Added...')\r\n            clean()\r\n        }\r\n        else{\r\n            alert('Invalid item info....')\r\n        }\r\n    } \r\n\r\n    function HandleUpdateItem(item:Iitem){\r\n            \r\n            setBtn(\"Update Item\")\r\n            setIname(item.iname)\r\n            setPrice(item.price)\r\n            setItemId(item.item_id)\r\n            setAvailableQty(item.available_qty)\r\n            let itm:Array<any> = []\r\n            console.log(item)\r\n            let cat_name = null\r\n            for(let i=0; i<item.item_category.length; i++){\r\n                \r\n                cat_name = category.map(itm=>item.item_category[i].cat_id===itm.cat_id?itm.cat_name:null)\r\n                \r\n                itm = [...itm,{\"label\":cat_name,\"value\":item.item_category[i].cat_id}]\r\n            }\r\n            console.log(itm)\r\n            setCatg(itm)\r\n            ChangeItemDiv('block')\r\n\r\n    }\r\n    \r\n    \r\n\r\n    async function UpdateItem(){\r\n\r\n        let item_category:Array<Icategory> = []\r\n        for(let i=0; i<catg.length; i++){\r\n            item_category = [...item_category,{\"cat_id\":catg[i].value,\"cat_name\":catg[i].label}]\r\n        }\r\n\r\n        const item= JSON.stringify({iname,item_id,price,available_qty,item_category})\r\n        const res:any = await axios.put('/api/Item/updateItem',{item})\r\n        \r\n        if(res.data[1].success){\r\n            \r\n            dispatch(UpdateItemAction(res.data[0]))\r\n            clean()\r\n            ChangeItemDiv('none')\r\n            alert('Item Updated...')\r\n\r\n        }\r\n        else{\r\n            alert('Invalid Input...')\r\n        }\r\n    }\r\n\r\n    async function DeleteItem(item_id:number){\r\n        const item = JSON.stringify({item_id})\r\n        const res:any = await axios.delete('/api/Item/deleteItem',{params:{item}})\r\n        if(res.data[1].success){\r\n            \r\n            dispatch(DeleteItemAction(item_id))\r\n            alert('Item Deleted...')\r\n        }\r\n        else{\r\n            alert('Invalid Item...')\r\n        }\r\n\r\n    }\r\n\r\n    function HandleAddItem (){\r\n            setBtn(\"Add Item\")\r\n            setIname('')\r\n            setPrice(0)\r\n            setAvailableQty(0)\r\n            ChangeItemDiv(\"block\")\r\n    }\r\n    \r\n    // function GetValue(){\r\n    //     for(let i=0; i<catg.length; i++){\r\n\r\n    //     }\r\n    // }\r\n\r\n    async function HandleAddCategory(){\r\n        \r\n        let cat_name:any = prompt(\"Category Name: \")\r\n        if(cat_name){\r\n            const category = JSON.stringify({cat_name})\r\n            \r\n            if(cat_name.length>0){\r\n                const res:any = await axios.post('/api/Item/addCategory',{category})\r\n\r\n                if(res.data[1].success){\r\n                    alert('Category added...')\r\n                    dispatch(AddCategory(res.data[0]))\r\n                }\r\n                else{\r\n                    alert('Invalid category..')\r\n                }\r\n            }\r\n            else{\r\n                alert('Invalid Input')\r\n            }\r\n    }\r\n\r\n    \r\n    \r\n    }\r\n        \r\n    return (\r\n        <div className=\"customer-main\">\r\n            \r\n            <div className=\"contents\">\r\n                <div className=\"top-btns\">\r\n                    <button className=\"btn btn-success btn-lg btn-txt\" onClick={()=>HandleAddItem()}>Add Item</button>\r\n                    <button className=\"btn btn-success btn-lg btn-txt\" onClick={()=>HandleAddCategory()}>Add Category</button>\r\n                </div>\r\n            <div className=\"head\">\r\n                Items   \r\n            </div>\r\n            <div className=\"scrollist\">\r\n                <table id=\"customers\">\r\n                    <tr>\r\n                        <th>Id</th>\r\n                        <th>Name</th>\r\n                        <th>Price</th>\r\n                        <th>Quantity</th>\r\n                        <th>Category</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                    {\r\n                        Items.map((item)=><tr>\r\n                            <td>{item.item_id}</td>\r\n                            <td>{item.iname}</td>\r\n                            <td>{item.price}</td>\r\n                            <td>{item.available_qty}</td>\r\n                            <td>\r\n                                <select >\r\n                                    {\r\n                                        \r\n                                        category.map(cat=><option value={cat.cat_id}>{cat.cat_name}</option>)\r\n                                    }\r\n                                </select>\r\n                            </td>\r\n                            <td>\r\n                            <div className=\"btn-container\">\r\n                                <button className=\"btn btn-primary btn-lg btn-wid\" onClick={()=>HandleUpdateItem(item)}>Update</button>\r\n                                <button className=\"btn btn-danger btn-lg btn-wid\" onClick={()=>DeleteItem(item.item_id)}>Delete</button>\r\n                            </div>\r\n                        </td>\r\n                        </tr>)\r\n                    }\r\n                    \r\n                </table>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n            <div className=\"addItems\">\r\n                <div className=\"cross\" onClick={()=>ChangeItemDiv(\"none\")}>\r\n                    X\r\n                </div>            \r\n                <div className=\"itm-details\">\r\n                <div className=\"itm-lbl\">\r\n                    <label >Name: </label>\r\n                    <input className=\"itm-input\" value={iname} onChange={(e)=>{setIname(e.target.value)}}/>\r\n                </div>\r\n                <div className=\"itm-lbl\">\r\n                    <label >Price: </label>\r\n                    <input type=\"number\" className=\"itm-input\" value={price}  onChange={(e)=>{setPrice(parseInt(e.target.value))}}/>\r\n                </div>\r\n                <div className=\"itm-lbl\">\r\n                    <label >Quantity: </label>\r\n                    <input type=\"number\" className=\"itm-input\" value={available_qty} onChange={(e)=>{setAvailableQty(parseInt(e.target.value))}}/>\r\n                </div>\r\n                \r\n                <div className=\"itm-lbl\">\r\n                     \r\n                     <label >Category: </label>\r\n                     <Select isMulti value={catg} onChange={(e)=>{setCatg(e)}} options={category.map(cat=>({\"value\":cat.cat_id,\"label\":cat.cat_name}))}></Select>\r\n                </div>\r\n\r\n                <div className=\"btn-md\">\r\n                    {\r\n                        btn===\"Add Item\"?\r\n                        <button className=\"bn\" onClick={AddItem}>Add Item</button>\r\n                        :\r\n                        <button className=\"bn\" onClick={UpdateItem}>Update Item</button>\r\n                    }\r\n                </div>\r\n            \r\n            </div>\r\n\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Items\r\n","import {Retrieve_Items} from '../constants/Constants'\r\nimport { Iitem } from '../Interface/Item'\r\n\r\nexport const RetrieveItemsAction = (params:Array<Iitem>) =>{\r\n    return{\r\n        type:Retrieve_Items,\r\n        payload:params\r\n    }\r\n}","import {Retrieve_Category} from '../constants/Constants'\r\nimport { Icategory } from '../Interface/Category'\r\n\r\nexport const RetrieveCategoryAction = (params:Array<Icategory>) =>{\r\n    return{\r\n        type:Retrieve_Category,\r\n        payload:params\r\n    }\r\n}","import {useEffect} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport axios from 'axios'\r\nimport { RootState } from '../../redux/store'\r\nimport {RetrieveItemsAction} from '../../redux/actions/RetrieveItemsAction'\r\nimport {useDispatch} from 'react-redux'\r\nimport './home.css';\r\nimport { RetrieveCategoryAction } from '../../redux/actions/RetrieveCategoryAction'\r\n\r\nfunction Home() {\r\n\r\n    const dispatch = useDispatch()\r\n    const Items = useSelector((state:RootState) => state.ItemReducer)\r\n    const category = useSelector((state:RootState)=>state.CategoryReducer)\r\n    \r\n    useEffect(() => {\r\n        RetrieveItems()\r\n        RetrieveCategory()\r\n    }, [])\r\n\r\n    async function RetrieveCategory(){\r\n        const category:any = await axios.get('/api/Item/retrieveCategory')\r\n  \r\n        dispatch(RetrieveCategoryAction(category.data[0]))\r\n      \r\n    }\r\n\r\n    async function RetrieveItems(){\r\n        \r\n        const items:any = await axios.get('/api/Item/retrieveItem')\r\n        console.log(items.data)\r\n        dispatch(RetrieveItemsAction(items.data[0]))\r\n        console.log(Items)\r\n    }\r\n\r\n    return (\r\n        <div className=\"contents\">\r\n        <div className=\"customer-main\">\r\n                <table id=\"customers\">\r\n                    <tr>\r\n                        <th>Id</th>\r\n                        <th>Name</th>\r\n                        <th>Price</th>\r\n                        <th>Quantity</th>\r\n                        <th>Category</th>\r\n                    </tr>\r\n                    {\r\n                        Items.map((item)=><tr>\r\n                            <td>{item.item_id}</td>\r\n                            <td>{item.iname}</td>\r\n                            <td>{item.price}</td>\r\n                            <td>{item.available_qty}</td>\r\n                            <td>\r\n                                <select >\r\n                                    {\r\n                                        \r\n                                        category.map(cat=><option value={cat.cat_id}>{cat.cat_name}</option>)\r\n                                    }\r\n                                </select>\r\n                            </td>\r\n                            \r\n                        </tr>)\r\n                    }\r\n                    \r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import {Add_Cafetarian} from '../constants/Constants'\r\nimport { Icafetarian } from '../Interface/Cafetarian'\r\n\r\nexport const AddCafetarianAction = (params:Icafetarian) =>{\r\n    return{\r\n        type:Add_Cafetarian,\r\n        payload:[params]\r\n    }\r\n}","import {Update_Cafetarian} from '../constants/Constants'\r\nimport { Icafetarian } from '../Interface/Cafetarian'\r\n\r\nexport const UpdateCafetarianAction = (params:Icafetarian) =>{\r\n    return{\r\n        type:Update_Cafetarian,\r\n        payload:[params]\r\n    }\r\n}","import {Delete_Cafetarian} from '../constants/Constants'\r\n\r\nexport const DeleteCafetarianAction = (params:string) =>{\r\n    return{\r\n        type:Delete_Cafetarian,\r\n        payload:params\r\n    }\r\n}","import {Retrieve_Cafetarian} from '../constants/Constants'\r\nimport { Icafetarian } from '../Interface/Cafetarian'\r\n\r\nexport const RetrieveCafetarianAction = (params:Array<Icafetarian>) =>{\r\n    return{\r\n        type:Retrieve_Cafetarian,\r\n        payload:params\r\n    }\r\n}","import './adminhome.css';\r\n\r\nimport {useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {useDispatch} from 'react-redux'\r\n\r\nimport {AddCafetarianAction} from '../../redux/actions/AddCafetarianAction'\r\nimport {useSelector} from 'react-redux'\r\nimport { RootState } from '../../redux/store';\r\nimport { Icafetarian } from '../../redux/Interface/Cafetarian';\r\nimport { UpdateCafetarianAction } from '../../redux/actions/UpdateCafetarianAction';\r\nimport {DeleteCafetarianAction} from '../../redux/actions/DeleteCafetarianAction'\r\nimport {RetrieveCafetarianAction} from '../../redux/actions/RetrieveCafetarianAction'\r\n\r\nfunction Cafetarian() {\r\n\r\n    const [fname, setFname] = useState<string>('')\r\n    const [lname, setLname] = useState<string>('')\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [salary, setSalary] = useState<number>(0)\r\n    const [dob,setDob] = useState<string>('')\r\n    const [btn,setBtn] = useState<string>(\"Add Cafetarian\") \r\n\r\n    const dispatch = useDispatch()\r\n    const Cafetarians = useSelector((state:RootState) => state.CafetarianReducer)\r\n    const admin = useSelector((state:RootState)=>state.LoginReducer)\r\n\r\n\r\n    useEffect(() => {\r\n        RetrieveItems()\r\n    }, [])\r\n\r\n    async function RetrieveItems(){\r\n        \r\n        const cafetarians:any = await axios.get('/api/Cafetarian/retrieveCafetarian')\r\n        dispatch(RetrieveCafetarianAction(cafetarians.data[0]))\r\n    \r\n    }\r\n\r\n    const ChangeItemDiv = (state:string) =>{\r\n        let itmDiv:any = document.querySelector('.addItems')\r\n        itmDiv.style.display = state\r\n    }\r\n    \r\n    function clean(){\r\n            setFname(\"\")\r\n            setLname(\"\")\r\n            setEmail(\"\")\r\n            setPassword(\"\")\r\n            setSalary(0)\r\n            setDob(\"\")\r\n    }\r\n\r\n    \r\n\r\n    async function AddCafetarian(){\r\n         \r\n        setBtn(\"Add Cafetarian\")\r\n        const hire_date = new Date()\r\n        const registered_by = admin.email\r\n        const cafetarian = JSON.stringify({fname,lname,email,password,salary,dob,hire_date,registered_by})\r\n\r\n        const isSuccess:any = await axios.post('/api/Cafetarian/addCafetarian',{cafetarian})\r\n        \r\n        // data[0] has item data , data[1] has success status i.e true,false\r\n        \r\n        if(isSuccess.data[1].success){\r\n            console.log(isSuccess.data[0])\r\n            dispatch(AddCafetarianAction(isSuccess.data[0]))\r\n            ChangeItemDiv('none')\r\n            alert('Cafetarian Added...')\r\n            clean()\r\n        }\r\n        else{\r\n            alert('Invalid info....')\r\n        }\r\n    } \r\n\r\n    function HandleAddCafetarian(){\r\n            setBtn(\"Add Cafetarian\")\r\n            setFname(\"\")\r\n            setLname(\"\")\r\n            setDob(\"\")\r\n            setPassword(\"\")\r\n            setEmail(\"\")\r\n            setSalary(0)\r\n            ChangeItemDiv('block')\r\n    }\r\n    \r\n    function HandleUpdateCafetarian(cafetarian:Icafetarian){\r\n            \r\n            setBtn(\"Update Cafetarian\")\r\n            setFname(cafetarian.fname)\r\n            setLname(cafetarian.lname)\r\n            setDob(cafetarian.dob)\r\n            setPassword(cafetarian.password)\r\n            setEmail(cafetarian.email)\r\n            setSalary(cafetarian.salary)\r\n            ChangeItemDiv('block')\r\n\r\n    }\r\n\r\n    async function UpdateCafetarian(){\r\n\r\n        const cafetarian= JSON.stringify({fname,lname,email,password,salary,dob})\r\n        const res:any = await axios.put('/api/Cafetarian/updateCafetarian',{cafetarian})\r\n        \r\n        if(res.data[1].success){\r\n            \r\n            dispatch(UpdateCafetarianAction(res.data[0]))\r\n            alert('Cafetarian Updated...')\r\n            \r\n        }\r\n        else{\r\n            alert('Invalid Input...')\r\n        }\r\n        ChangeItemDiv('none')\r\n        clean()\r\n        setBtn(\"Add Cafetarian\")\r\n    }\r\n\r\n    async function DeleteCafetarian(email:string){\r\n        const cafetarian = JSON.stringify({email})\r\n        const res:any = await axios.delete('/api/Cafetarian/deleteCafetarian',{params:{cafetarian}})\r\n        if(res.data[1].success){\r\n            \r\n            dispatch(DeleteCafetarianAction(email))\r\n            alert('Cafetarian Deleted...')\r\n        }\r\n        else{\r\n            alert('Invalid Input...')\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"customer-main\">\r\n            <div className=\"contents\">\r\n                <button className=\"btn btn-success btn-lg btn-txt\" onClick={()=>HandleAddCafetarian()}>Add Cafetarian</button>\r\n            \r\n            <div className=\"head\">\r\n                Cafetarians\r\n            </div>\r\n            <table id=\"customers\">\r\n                <tr>\r\n                    <th>First Name</th>\r\n                    <th>Last Name</th>\r\n                    <th>Email</th>\r\n                    <th>Password</th>\r\n                    <th>Salary</th>\r\n                    <th>DOB</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n                {\r\n                    Cafetarians.map(caf=><tr>\r\n                        <td>{caf.fname}</td>\r\n                        <td>{caf.lname}</td>\r\n                        <td>{caf.email}</td>\r\n                        <td>{caf.password}</td>\r\n                        <td>{caf.salary}</td>\r\n                        <td>{caf.dob}</td>\r\n                        <td>\r\n                            <div className=\"btn-container\">\r\n                                <button className=\"btn btn-primary btn-lg btn-wid\" onClick={()=>HandleUpdateCafetarian(caf)}>Update</button>\r\n                                <button className=\"btn btn-danger btn-lg btn-wid\" onClick={()=>DeleteCafetarian(caf.email)}>Delete</button>\r\n                            </div>\r\n                        </td>\r\n                    </tr>)\r\n                }\r\n            </table>\r\n        </div>\r\n\r\n            \r\n        <div className=\"addItems\">\r\n                <div className=\"cross\" onClick={()=>ChangeItemDiv(\"none\")}>\r\n                    X\r\n                </div>            \r\n                <div className=\"itm-details\">\r\n                <div className=\"itm-lbl\">\r\n                    <label >First Name: </label>\r\n                    <input className=\"itm-input\" value={fname} onChange={(e)=>{setFname(e.target.value)}}/>\r\n                </div>\r\n                <div className=\"itm-lbl\">\r\n                    <label >Last Name: </label>\r\n                    <input  className=\"itm-input\" value={lname}  onChange={(e)=>{setLname(e.target.value)}}/>\r\n                </div>\r\n                <div className=\"itm-lbl\">\r\n                    <label >Email: </label>\r\n                    <input  className=\"itm-input\" value={email} onChange={(e)=>{setEmail(e.target.value)}}/>\r\n                </div>\r\n                <div className=\"itm-lbl\">\r\n                    <label >Salary: </label>\r\n                    <input  className=\"itm-input\" value={salary} onChange={(e)=>{setSalary(parseInt(e.target.value))}}/>\r\n                </div>\r\n                <div className=\"itm-lbl\">\r\n                    <label >Password: </label>\r\n                    <input className=\"itm-input\" value={password} onChange={(e)=>{setPassword(e.target.value)}}/>\r\n                </div>\r\n                <div className=\"itm-lbl\">\r\n                    <label>Date Of Birth: </label>\r\n                    <input className=\"itm-input\" value={dob} onChange={(e)=>{setDob(e.target.value)}}/>\r\n                </div>\r\n\r\n                <div className=\"btn-md\">\r\n                    {\r\n                        btn===\"Add Cafetarian\"?\r\n                        <button className=\"bn\" onClick={AddCafetarian}>Add Cafetarian</button>\r\n                        :\r\n                        <button className=\"bn\" onClick={UpdateCafetarian}>Update Cafetarian</button>\r\n                    }\r\n                </div>\r\n            \r\n            </div>\r\n        \r\n        </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cafetarian\r\n\r\n\r\n\r\n","import './App.css';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\n\r\nimport Login from './components/Login/Login'\r\nimport Nav from './components/Nav/Nav';\r\nimport Items from './components/Items/Items';\r\nimport Home from './components/Home/Home';\r\nimport AdminHome from './components/AdminHome/AdminHome';\r\nimport {useSelector} from 'react-redux'\r\nimport { RootState } from './redux/store';\r\n\r\n\r\nfunction App() {\r\n  \r\n  const loginCredentials = useSelector((state:RootState) => state.LoginReducer)\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n            \r\n      {loginCredentials?.success?<Nav/>:null}\r\n          {loginCredentials?.success?\r\n            loginCredentials?.admin?\r\n              <Switch>\r\n                <Route exact path=\"/\">\r\n                  \r\n                  <AdminHome/>\r\n                   \r\n                  </Route>\r\n                </Switch>\r\n            :\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Home/>\r\n              </Route>\r\n              <Route path=\"/items\">\r\n                <Items/>\r\n              </Route>\r\n            </Switch>\r\n              :\r\n            <Route exact path=\"/\"> \r\n                <Login/>\r\n            </Route>\r\n            \r\n          }\r\n          \r\n          \r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {Update_Login} from '../constants/Constants'\r\nimport { Ilogin } from '../Interface/Login'\r\n\r\nconst initialState:Ilogin = {success:false}\r\n\r\ninterface Iaction{\r\n    type:string,\r\n    payload:Ilogin\r\n}\r\n\r\nexport const LoginReducer = (state=initialState,action:Iaction)=>{\r\n    switch(action.type){\r\n\r\n        case Update_Login:\r\n            return state=action.payload\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","import {Retrieve_Items, Update_Item, Add_Item, Delete_Item} from '../constants/Constants'\r\nimport { Iitem } from '../Interface/Item'\r\n\r\nconst initialState:Array<Iitem> = []\r\n\r\ninterface Iaction{\r\n    type:string,\r\n    payload:Array<Iitem>\r\n}\r\n\r\n\r\n\r\nexport const ItemReducer = (state=initialState,action:Iaction & {payload:number})=>{\r\n    switch(action.type){\r\n\r\n        case Retrieve_Items:\r\n            return state=action.payload\r\n        \r\n        case Add_Item:\r\n            return [action.payload[0],...state]\r\n\r\n        case Update_Item:\r\n            return state.map(item=>item.item_id===action.payload[0].item_id?action.payload[0]:item)\r\n\r\n        case Delete_Item:\r\n            return state.filter(item=>item.item_id!==action.payload)\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","import {Retrieve_Cafetarian, Update_Cafetarian, Add_Cafetarian, Delete_Cafetarian} from '../constants/Constants'\r\nimport { Icafetarian } from '../Interface/Cafetarian'\r\n\r\nconst initialState:Array<Icafetarian> = []\r\n\r\ninterface Iaction{\r\n    type:string,\r\n    payload:Array<Icafetarian>\r\n}\r\n\r\nexport const CafetarianReducer = (state=initialState,action:Iaction & {payload:string})=>{\r\n    switch(action.type){\r\n\r\n        case Retrieve_Cafetarian:\r\n            return state=action.payload\r\n        \r\n        case Add_Cafetarian:\r\n            return [action.payload[0],...state]\r\n\r\n        case Update_Cafetarian:\r\n            return state.map(caf=>caf.email===action.payload[0].email?action.payload[0]:caf)\r\n\r\n        case Delete_Cafetarian:\r\n            return state.filter(caf=>caf.email!==action.payload)\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","import {Add_Category,Retrieve_Category} from '../constants/Constants'\r\nimport { Icategory } from '../Interface/Category'\r\n\r\nconst initialState:Array<Icategory> = []\r\n\r\ninterface Iaction{\r\n    type:string,\r\n    payload:Array<Icategory>\r\n}\r\n\r\n\r\n\r\nexport const CategoryReducer = (state=initialState,action:Iaction)=>{\r\n    switch(action.type){\r\n\r\n        case Retrieve_Category:\r\n            return state=action.payload\r\n        \r\n        case Add_Category:\r\n            return [action.payload[0],...state]\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","import { combineReducers,createStore } from 'redux'\r\nimport {LoginReducer} from './reducers/LoginReducer'\r\nimport {ItemReducer} from './reducers/ItemReducer'\r\nimport {CafetarianReducer} from './reducers/CafetarianReducer'\r\nimport {CategoryReducer} from './reducers/CategoryReducer'\r\n\r\nconst rootReducer= combineReducers(\r\n{\r\n    LoginReducer,\r\n    ItemReducer,\r\n    CafetarianReducer,\r\n    CategoryReducer\r\n}\r\n\r\n)\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\nexport const store = createStore(rootReducer)","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {store} from './redux/store'\r\nimport {Provider} from 'react-redux'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}